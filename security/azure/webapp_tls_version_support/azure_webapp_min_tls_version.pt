name "Azure Web App Minimum TLS Version"
rs_pt_ver 20180301
type "policy"
short_description "Checks for Azure Web Apps with a minimum TLS version less that the value specified.\n See the [README](https://github.com/flexera/policy_templates/tree/master/security/azure/webapp_tls_version_support) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
severity "low"
category "Security"
default_frequency "daily"
info(
  version: "2.2",
  provider: "Azure",
  service: "App Service",
  policy_set: ""
  )

###############################################################################
# User inputs
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

parameter "param_azure_endpoint" do
  type "string"
  label "Azure Endpoint"
  allowed_values "management.azure.com", "management.chinacloudapi.cn"
  default "management.azure.com"
end

parameter "param_subscription_whitelist" do
  label "Subscription Whitelist"
  type "list"
  description "Whitelisted Subscriptions, if empty, all subscriptions will be checked"
end

parameter "param_min_tls_version" do
  type "string"
  label "Minimum TLS Version"
  description "The minimum TLS version that should be allowed"
  allowed_values ["1.0", "1.1", "1.2"]
end

###############################################################################
# Authentication
###############################################################################

credentials "azure_auth" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential from the list."
  tags "provider=azure_rm"
end

###############################################################################
# Pagination
###############################################################################

pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_subscriptions" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path "/subscriptions/"
    query "api-version","2018-06-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscriptionId", jmes_path(col_item,"subscriptionId")
      field "subscriptionName", jmes_path(col_item,"displayName")
    end
  end
end

datasource "ds_filtered_subscriptions" do
  run_script $js_filtered_subscriptions, $ds_subscriptions, $param_subscription_whitelist
end

#https://docs.microsoft.com/en-us/rest/api/appservice/webapps/list
datasource "ds_azure_web_app_list" do
  iterate $ds_filtered_subscriptions
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item,"subscriptionId"), "/providers/Microsoft.Web/sites"])
    query "api-version","2019-08-01"
    header "User-Agent", "RS Policies"
    ignore_status [400,403,404]
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscriptionId", val(iter_item, "subscriptionId")
      field "subscriptionName", val(iter_item, "subscriptionName")
      field "name", jmes_path(col_item, "name")
      field "location", jmes_path(col_item, "location")
      field "resource_group", get(4, split(jmes_path(col_item,"id"), "/"))
      field "httpsOnly", jmes_path(col_item, "properties.httpsOnly")
      field "tags", jmes_path(col_item,"tags")
      field "id", jmes_path(col_item,"id")
    end
  end
end

#https://docs.microsoft.com/en-us/rest/api/appservice/webapps/getconfiguration
datasource "ds_azure_web_app_config" do
  iterate $ds_azure_web_app_list
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path join([val(iter_item, "id"),"/config/web"])
    query "api-version","2019-08-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    field "subscriptionId", val(iter_item, "subscriptionId")
    field "subscriptionName", val(iter_item, "subscriptionName")
    field "name", val(iter_item, "name")
    field "location", val(iter_item, "location")
    field "resource_group", val(iter_item, "resource_group")
    field "httpsOnly", val(iter_item, "httpsOnly")
    field "minTlsVersion", jmes_path(response,"properties.minTlsVersion")
    field "tags", val(iter_item, "tags")
    field "id", val(iter_item, "id")
  end
end

datasource "ds_format_data" do
  run_script $js_format_data, $ds_azure_web_app_config
end

###############################################################################
# Scripts
###############################################################################

script "js_filtered_subscriptions", type: "javascript" do
  parameters "ds_subscriptions", "param_subscription_whitelist"
  result "results"
  code <<-EOS
  var results = []
  if ( param_subscription_whitelist.length != 0){
    results = []
    _.each(param_subscription_whitelist, function(sub){
      var found = _.find(ds_subscriptions, function(item){
        return item.subscriptionId == sub || item.subscriptionName.toLowerCase() == sub.toLowerCase();
      })
      results.push(found)
    })
  } else {
    results = ds_subscriptions
  }
EOS
end

script "js_format_data", type: "javascript" do
  parameters "ds_azure_web_app_config"
  result "results"
  code <<-EOF
  var results = _.filter(ds_azure_web_app_config, function(resource){
    var tagsList = "";
    for(var prop in resource.tags){
      tagsList = tagsList+prop+":"+resource.tags[prop]+", ";
    }

    if(tagsList.length > 0){
      resource.tags = tagsList.substring(0,tagsList.length-2);
    } else {
      resource.tags = "< No Value >"
    }
    return resource
  })
  results = _.sortBy(results,"location");
  results = _.sortBy(results,"subscriptionName");
EOF
end

###############################################################################
# Policy
###############################################################################

policy "policy_azure_web_app_list" do
  validate_each $ds_format_data do
    summary_template "{{ len data }} Azure Web Apps with TLS version less than {{ parameters.param_min_tls_version }}"
    escalate $esc_email
    check ge(to_n(val(item, "minTlsVersion")), to_n($param_min_tls_version))
    export do
      resource_level true
      field "subscriptionName" do
        label "Subscription Name"
      end
      field "subscriptionId" do
        label "Subscription Id"
      end
      field "location" do
        label "Location"
      end
      field "resource_group" do
        label "Resource Group"
      end
      field "name" do
        label "Web App Name"
      end
      field "httpsOnly" do
        label "HTTPS Only"
      end
      field "minTlsVersion" do
        label "Minimum TLS Version"
      end
      field "tags" do
        label "Tags"
      end
      field "id" do
        label "Resource Id"
      end
    end
  end
end

###############################################################################
# Escalation
###############################################################################

escalation "esc_email" do
  label "Send Mail"
  description "Sends incidents email"
  email $param_email
end

###############################################################################
# Cloud Workflow
###############################################################################

define sys_log($subject, $detail) do
  if $$debug
    rs_cm.audit_entries.create(
      notify: "None",
      audit_entry: {
        auditee_href: @@account,
        summary: "Azure Web App Minimum TLS Version Policy "+ $subject,
        detail: $detail
      }
    )
  end
end
