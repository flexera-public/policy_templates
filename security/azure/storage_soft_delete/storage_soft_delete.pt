name "Azure Ensure Soft Delete Enabled For Azure Storage"
rs_pt_ver 20180301
type "policy"
short_description "Report if the storage service does not have soft delete enabled. \n See the [README](https://github.com/flexera/policy_templates/tree/master/security/azure/storage_soft_delete/) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
category "Security"
severity "high"
default_frequency "daily"
info(
  version: "2.0",
  provider: "Azure",
  service: "Storage",
  policy_set: "CIS",
  cce_id: "",
  benchmark_control: "3.8",
  benchmark_version: "1.4.0",
  cis_controls: "[\"11.1v8\", \"10v7\"]",
  nist: "AC-4"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_azure_endpoint" do
  type "string"
  label "Azure Endpoint"
  allowed_values "management.azure.com", "management.chinacloudapi.cn"
  default "management.azure.com"
end

###############################################################################
# Authentication
###############################################################################

credentials "azure_auth" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential from the list."
  tags "provider=azure_rm"
end

###############################################################################
# Pagination
###############################################################################

pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_subscriptions" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path "/subscriptions/"
    query "api-version", "2019-06-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item, "subscriptionId")
      field "displayName", jmes_path(col_item, "displayName")
      field "state", jmes_path(col_item, "state")
    end
  end
end

datasource "ds_storage_accounts" do
  iterate $ds_subscriptions
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item, "id"), "/providers/Microsoft.Storage/storageAccounts"])
    query "api-version", "2021-04-01"
    header "User-Agent", "RS Policies"
    header "Content-Type", "application/json"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item, "id")
      field "kind", jmes_path(col_item, "kind")
      field "location", jmes_path(col_item, "location")
      field "name", jmes_path(col_item, "name")
      field "accessTier", jmes_path(col_item, "properties.accessTier")
      field "subscriptionId", val(iter_item, "id")
      field "subscriptionName", val(iter_item, "displayName")
    end
  end
end

datasource "ds_storage_accounts_with_blob_service" do
  iterate $ds_storage_accounts
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path join([val(iter_item, 'id'), '/blobServices/default'])
    query "api-version", "2021-04-01"
    header "User-Agent", "RS Policies"
    header "Content-Type", "application/json"
  end
  result do
    encoding "json"
    field "id", val(iter_item, "id")
    field "kind", val(iter_item, "kind")
    field "location", val(iter_item, "location")
    field "name", val(iter_item, "name")
    field "accessTier", val(iter_item, "accessTier")
    field "subscriptionId", val(iter_item, "subscriptionId")
    field "subscriptionName", val(iter_item, "subscriptionName")
    field "softDeleteEnabled", jmes_path(response, "properties.deleteRetentionPolicy.enabled")
    field "softDeleteDays", jmes_path(response, "properties.deleteRetentionPolicy.days")
  end
end

datasource "ds_bad_storage_accounts" do
  run_script $js_bad_storage_accounts, $ds_storage_accounts_with_blob_service
end

###############################################################################
# Scripts
###############################################################################

script "js_bad_storage_accounts", type: "javascript" do
  parameters "ds_storage_accounts"
  result "result"
  code <<-EOS
  result = []

  _.each(ds_storage_accounts, function(account) {
    if (account['softDeleteEnabled'] != true && account['softDeleteEnabled'] != 'true') {
      result.push(account)
    }
  })
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_storage_soft_delete" do
  validate $ds_bad_storage_accounts do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Storage Account(s) Found Without Soft Delete Enabled"
    escalate $esc_email
    check eq(size(data),0)
    export do
      field "name" do
        label "Name"
      end
      field "kind" do
        label "Kind"
      end
      field "location" do
        label "Location"
      end
      field "accessTier" do
        label "Access Tier"
      end
      field "softDeleteEnabled" do
        label "Soft Delete Enabled"
      end
      field "id" do
        label "Resource ID"
      end
      field "subscriptionId" do
        label "Subscription ID"
      end
      field "subscriptionName" do
        label "Subscription Name"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
