name "AWS IAM Report Regions Without Access Analyzer"
rs_pt_ver 20180301
type "policy"
short_description "Report affected regions if no Access Analyzer is enabled. \n See the [README](https://github.com/flexera/policy_templates/tree/master/security/aws/iam_access_analyzer_enabled) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
category "Security"
severity "high"
default_frequency "daily"
info(
  version: "2.0",
  provider: "AWS",
  service: "IAM",
  policy_set: "CIS",
  cce_id: "", # Does not appear to have a CCE
  cis_aws_foundations_securityhub: "", # Not listed
  benchmark_control: "1.20",
  benchmark_version: "1.4.0",
  cis_controls: "[\"3.3v8\", \"14v7\", \"14.6v7\"]",
  nist: "" # Unknown
)

###############################################################################
# User inputs
###############################################################################

parameter "param_email" do
  type "list"
  label "Email Address"
  description "Email addresses of the recipients you wish to notify"
end

parameter "param_regions" do
  type "list"
  label "Regions"
  description "Active regions you wish to run this policy against"
  default ["us-east-1"]
  allowed_pattern /^([a-zA-Z-_]+-[a-zA-Z0-9-_]+-[0-9-_]+,*|)+$/
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_aws" do
  schemes "aws","aws_sts"
  label "AWS"
  description "Select the AWS Credential from the list"
  tags "provider=aws"
end

###############################################################################
# Datasources
###############################################################################

# Retrieve the id number of the account being tested
datasource "ds_get_caller_identity" do
  request do
    auth $auth_aws
    verb "GET"
    host "sts.amazonaws.com"
    path "/"
    header "User-Agent", "RS Policies"
    query "Action", "GetCallerIdentity"
    query "Version", "2011-06-15"
  end
  result do
    encoding "xml"
    collect xpath(response, "//GetCallerIdentityResponse/GetCallerIdentityResult") do
      field "account",xpath(col_item, "Account")
    end
  end
end

# Places param_regions into a datasource for iteration
datasource "ds_regions" do
  run_script $js_regions, $param_regions
end

datasource "ds_list_analyzers" do
  iterate $ds_regions
  request do
    auth $auth_aws
    verb "GET"
    host join(["access-analyzer.", iter_item ,".amazonaws.com"])
    path "/analyzer"
    header "User-Agent", "RS Policies"
    header "Accept", "application/json"
    query "Action", "GetCallerIdentity"
    query "Version", "2011-06-15"
  end
  result do
    encoding "json"
    field "region", iter_item
    field "analyzers", jmes_path(response, "analyzers")
  end
end

datasource "ds_checked_analyzers" do
  run_script $js_analyzers, $ds_get_caller_identity, $ds_list_analyzers
end

###############################################################################
# Scripts
###############################################################################

script "js_regions", type:"javascript" do
  parameters "param_regions"
  result "param_regions"
  code ""
end

# Script to combine ds_get_caller_identity and ds_iam_accesskeys into a single datasource
script "js_analyzers", type:"javascript" do
  parameters "ds_get_caller_identity", "ds_list_analyzers"
  result "result"
  code <<-EOS
    var regions=[]

    _.each(ds_list_analyzers, function(item) {
      region_bad = 1

      _.each(item.analyzers, function(analyzer) {
        if (analyzer.status == "ACTIVE") {
          region_bad = 0
        }
      })

      if (region_bad == 1) {
        regions.push(item.region)
      }
    })

    result={
      id: ds_get_caller_identity[0]['account'],
      regions: regions
    }
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_access_analyzer_enabled" do
  validate $ds_checked_analyzers do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): Regions Without Access Analyzers Found"
    escalate $esc_report_access_analyzer_enabled
    detail_template <<-EOS
Regions without active Access Analyzers found.

Affected Account ID: {{data.id}}
Affected Regions: {{data.regions}}
EOS
    check eq(size(val(data, "regions")),0)
    export do
      resource_level true
      field "id" do
        label "id"
      end
      field "regions" do
        label "regions"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_report_access_analyzer_enabled" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
