name "AWS Ensure Rotation For Customer Master Keys (CMKs) Is Enabled"
rs_pt_ver 20180301
type "policy"
short_description "Report if CMK rotation is not enabled. \n See the [README](https://github.com/flexera/policy_templates/tree/master/security/aws/kms_rotation) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
category "Security"
severity "high"
default_frequency "daily"
info(
  version: "2.0",
  provider: "AWS",
  service: "KMS",
  policy_set: "CIS",
  cce_id: "CCE-78920-6",
  cis_aws_foundations_securityhub: "2.8",
  benchmark_control: "3.8",
  benchmark_version: "1.4.0",
  cis_controls: "[\"3.11v8\", \"6v7\", \"14.8v7\"]",
  nist: ""
)

###############################################################################
# User inputs
###############################################################################

parameter "param_email" do
  type "list"
  label "Email Address"
  description "Email addresses of the recipients you wish to notify"
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_aws" do
  schemes "aws","aws_sts"
  label "AWS"
  description "Select the AWS Credential from the list"
  tags "provider=aws"
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_regions_list" do
  request do
    auth $auth_aws
    verb "GET"
    host "ec2.amazonaws.com"
    path "/"
    query "Action", "DescribeRegions"
    query "Version", "2016-11-15"
  end
  result do
    encoding "xml"
    collect xpath(response, "//DescribeRegionsResponse/regionInfo/item", "array") do
      field "region", xpath(col_item, "regionName")
    end
  end
end

datasource "ds_regions_clean" do
  run_script $js_regions_clean, $ds_regions_list
end

datasource "ds_regions_with_keys" do
  iterate $ds_regions_clean
  request do
    auth $auth_aws
    verb "GET"
    host join(["kms.", iter_item, ".amazonaws.com"])
    path "/"
    header "User-Agent", "RS Policies"
    header "Accept", "application/json"
    query "Action", "ListKeys"
  end
  result do
    encoding "json"
    field "region", iter_item
    field "keys", jmes_path(response, "ListKeysResponse.ListKeysResult.Keys")
  end
end

datasource "ds_keys" do
  run_script $js_keys, $ds_regions_with_keys
end

datasource "ds_keys_with_rotation" do
  iterate $ds_keys
  request do
    auth $auth_aws
    verb "POST"
    host join(["kms.", val(iter_item, "region"), ".amazonaws.com"])
    path "/"
    header "User-Agent", "RS Policies"
    header 'Content-Type', 'application/x-amz-json-1.1'
    header 'X-Amz-Target', 'TrentService.GetKeyRotationStatus'
    body join(['{"KeyId": "', val(iter_item, "id"), '"}'])
    ignore_status 400
  end
  result do
    encoding "json"
    field "arn", val(iter_item, "arn")
    field "id", val(iter_item, "id")
    field "region", val(iter_item, "region")
    field "rotation_enabled", jmes_path(response, "KeyRotationEnabled")
  end
end

datasource "ds_keys_without_rotation" do
  run_script $js_keys_without_rotation, $ds_keys_with_rotation
end

###############################################################################
# Scripts
###############################################################################

script "js_regions_clean", type:"javascript" do
  parameters "ds_regions_list"
  result "result"
  code <<-EOS
    result = []

    _.each(ds_regions_list, function(region_item) {
      result.push(region_item.region)
    })
EOS
end

script "js_keys", type:"javascript" do
  parameters "ds_regions_with_keys"
  result "result"
  code <<-EOS
    result = []

    _.each(ds_regions_with_keys, function(region) {
      _.each(region.keys, function(key) {
        result.push({
          arn: key.KeyArn,
          id: key.KeyId,
          region: region.region
        })
      })
    })
EOS
end

script "js_keys_without_rotation", type:"javascript" do
  parameters "ds_keys_with_rotation"
  result "result"
  code <<-EOS
    result = []

    _.each(ds_keys_with_rotation, function(key) {
      if (key.rotation_enabled != true) {
        result.push(key)
      }
    })
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_keys_without_rotation" do
  validate $ds_keys_without_rotation do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Customer Managed Keys (CMKs) Found Without Rotation Enabled"
    escalate $esc_report_keys_without_rotation
    check eq(size(data),0)
    export do
      resource_level true
      field "id" do
        label "Name"
      end
      field "arn" do
        label "ARN"
      end
      field "region" do
        label "Region"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_report_keys_without_rotation" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
