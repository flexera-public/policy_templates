name "AWS IAM Report Insufficient Password Policy"
rs_pt_ver 20180301
type "policy"
short_description "Report if password length requirement is insufficient. \n See the [README](https://github.com/flexera/policy_templates/tree/master/security/aws/iam_min_password_length) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
category "Security"
severity "high"
default_frequency "daily"
info(
  version: "2.3",
  provider: "AWS",
  service: "IAM",
  policy_set: "CIS",
  cce_id: "CCE-78907-3",
  cis_aws_foundations_securityhub: "1.9",
  benchmark_control: "1.8",
  benchmark_version: "1.4.0",
  cis_controls: "[\"5v8\", \"5.2v8\", \"16v7\"]",
  nist: "IA-5(1)"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email Address"
  description "Email addresses of the recipients you wish to notify"
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
  default ""
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_aws" do
  schemes "aws","aws_sts"
  label "AWS"
  description "Select the AWS Credential from the list"
  tags "provider=aws"
  aws_account_number $param_aws_account_number
end

###############################################################################
# Datasources
###############################################################################

# Retrieve the id number of the account being tested
datasource "ds_get_caller_identity" do
  request do
    auth $auth_aws
    verb "GET"
    host "sts.amazonaws.com"
    path "/"
    header "User-Agent", "RS Policies"
    query "Action", "GetCallerIdentity"
    query "Version", "2011-06-15"
  end
  result do
    encoding "xml"
    collect xpath(response, "//GetCallerIdentityResponse/GetCallerIdentityResult") do
      field "account",xpath(col_item, "Account")
    end
  end
end

# Retrieve the password policy
datasource "ds_iam_password_policy" do
  request do
    auth $auth_aws
    verb "GET"
    host "iam.amazonaws.com"
    path "/"
    query "Action", "GetAccountPasswordPolicy"
    query "Version", "2010-05-08"
    header "Accept", "application/json"
    header "User-Agent", "RS Policies"
    ignore_status 404 # 404 response is expected if no password policy is set.
  end
  result do
    encoding "json"
    field "passwordPolicy", jmes_path(response, "GetAccountPasswordPolicyResponse.GetAccountPasswordPolicyResult.PasswordPolicy")
  end
end


# Store account id and whether or not the password policy is sufficient
datasource "ds_iam_password_status" do
  run_script $js_iam_password_status, $ds_get_caller_identity, $ds_iam_password_policy
end

###############################################################################
# Scripts
###############################################################################

# Determines if the password policy is sufficient
script "js_iam_password_status", type:"javascript" do
  parameters "ds_get_caller_identity", "ds_iam_password_policy"
  result "result"
  code <<-EOS
    pw_policy_ok=0

    if (ds_iam_password_policy['passwordPolicy'] != null) {
      if (ds_iam_password_policy['passwordPolicy']['MinimumPasswordLength'] != null) {
        if (ds_iam_password_policy['passwordPolicy']['MinimumPasswordLength'] >= 14) {
          pw_policy_ok=1
        }
      }
    }

    result={
      id: ds_get_caller_identity[0]['account'],
      pw_policy_ok: pw_policy_ok
    }
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_iam_password_policy" do
  validate $ds_iam_password_status do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): Password Policy Insufficient"
    escalate $esc_report_bad_password_policy
    detail_template <<-EOS
No password policy has been set with a minimum password length of 14 or greater.

Affected Account ID: {{data.id}}
EOS
    check eq(val(data, "pw_policy_ok"),1)
    export do
      resource_level true
      field "id" do
        label "id"
      end
      field "pw_policy_ok" do
        label "pw_policy_ok"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_report_bad_password_policy" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
