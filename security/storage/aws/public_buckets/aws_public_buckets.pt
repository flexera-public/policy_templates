name "AWS Open Buckets"
rs_pt_ver 20180301
type "policy"
short_description "Check for buckets that are open to everyone. See the [README](https://github.com/flexera/policy_templates/tree/master/security/storage/aws/public_buckets) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "high"
category "Security"
info(
  version: "2.5",
  provider: "AWS",
  service: "S3",
  policy_set: "Open Buckets"
)

###############################################################################
# Permissions
###############################################################################

permission "perm_read_creds" do
  actions   "rs_cm.show_sensitive","rs_cm.index_sensitive"
  resources "rs_cm.credentials"
end


###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
end

###############################################################################
# Authentication
###############################################################################

#authenticate with AWS
credentials "auth_aws" do
  schemes "aws","aws_sts"
  label "AWS"
  description "Select the AWS Credential from the list."
  tags "provider=aws"
  aws_account_number $param_aws_account_number
end

###############################################################################
# Datasources
###############################################################################

# Reference: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTServiceGET.html
datasource "aws_buckets" do
  # This request is not paginated
  request do
    auth $auth_aws
    host "s3.amazonaws.com"
    path "/"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "xml"
    collect xpath(response, "//ListAllMyBucketsResult/Buckets/Bucket", "array") do
      field "bucket_name", xpath(col_item,"Name")
      field "creation_date", xpath(col_item, "CreationDate")
    end
  end
end

datasource "aws_buckets_with_region" do
  iterate $aws_buckets
  request do
    auth $auth_aws
    host "s3-external-1.amazonaws.com"
    path join(["/", val(iter_item, "bucket_name")])
    query "location", ""
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "xml"
    field "bucket_name", val(iter_item, "bucket_name")
    field "creation_date", val(iter_item, "creation_date")
    field "region", xpath(response, "//LocationConstraint")
  end
end

datasource "aws_sanitized_buckets" do
  run_script $parse_buckets, $aws_buckets_with_region
end

script "parse_buckets", type: "javascript" do
  parameters "buckets"
  result "results"
  code <<-EOS
// This is the list of filtered buckets.
results = []
for ( i = 0; i < buckets.length; i++ ) {
  if ( !buckets[i]["region"] ){
    results.push(
    {
      "bucket_name": buckets[i]["bucket_name"],
      "creation_date": buckets[i]["creation_date"],
      "region": "us-east-1",
      "host": "s3-external-1.amazonaws.com"
    }
    )
  } else {
    if ( buckets[i]["region"] == "EU" ) { buckets[i]["region"] = "eu-west-1" }
    results.push(
    {
      "bucket_name": buckets[i]["bucket_name"],
      "creation_date": buckets[i]["creation_date"],
      "region": buckets[i]["region"],
      "host": "s3-" + buckets[i]["region"] + ".amazonaws.com"
    }
    )
  }
};
EOS
end

# Reference: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETacl.html
datasource "aws_bucket_acls" do
  iterate $aws_sanitized_buckets
  request do
    run_script $aws_bucket_acl_request, val(iter_item, "bucket_name"), val(iter_item, "host")
  end
  #request do
  #  auth $auth_aws
  #  host val(iter_item,"host")
  #  path join(["/", val(iter_item, "bucket_name")])
  #  query "acl", ""
  #  header "User-Agent", "RS Policies"
  #end
  result do
    encoding "xml"
    collect xpath(response, "//AccessControlPolicy", "array") do
      field "id", val(iter_item, "bucket_name")
      field "creation_date", val(iter_item, "creation_date")
      field "region", val(iter_item, "region")
      field "grantee_uris", xpath(col_item, "AccessControlList/Grant/Grantee/URI","array")
      field "owner", xpath(col_item, "Owner/DisplayName")
      field "region", val(iter_item, "region")
    end
  end
end

###############################################################################
# Scripts
###############################################################################

script "aws_bucket_acl_request", type: "javascript" do
  parameters "bucket_name", "host"
  result "request"
  code <<-EOS
  request = {
    auth: "auth_aws",
    host: host,
    path: '/' + bucket_name + '/',
    query_params: {
      acl: ""
    },
    headers: {
      "User-Agent": "RS Policies"
    }
  }
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "public_buckets" do
  validate_each $aws_bucket_acls do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Public Buckets Found in AWS"
    escalate $report_open_buckets
    check logic_not(contains(val(item, "grantee_uris"), "http://acs.amazonaws.com/groups/global/AllUsers"))
    export do
      resource_level true
      field "region" do
        label "Region"
      end
      field "id" do
        label "Bucket Name"
      end
      field "creation_date" do
        label "Creation Date"
      end
      field "grantee_uris" do
        label "GranteeURI"
      end
      field "owner" do
        label "Owner"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "report_open_buckets" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
