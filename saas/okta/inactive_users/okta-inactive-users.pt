name "Okta Inactive Users"
rs_pt_ver 20180301
type "policy"
short_description "This policy will identify Okta users that have not logged in within a specified number of days and deactivate the users upon approval. See the [README](https://github.com/flexera/policy_templates/tree/master/saas/okta/inactive_users/) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
severity "medium"
category "SaaS Management"
info(
  version: "2.2",
  provider: "Okta",
  service: "",
  policy_set: ""
)

parameter "param_okta_org_name" do
  label "Okta Organization Name"
  type "string"
  description "For example, if you navigate to https://contoso.okta.com to login to Okta, the value in this parameter would be `contoso`"
end

parameter "param_days" do
  label "Number of Days Since Last Login"
  type "number"
  default 30
  description "This value will be the threshold for which incidents will be raised"
end

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Deactivate Users"]
end

credentials "auth_okta" do
  schemes "api_key"
  label "Okta"
  description "Select the Okta Credential from the list."
  tags "provider=okta"
end

datasource "ds_okta_users" do
  request do
    auth $auth_okta
    host join([$param_okta_org_name,".okta.com"])
    path "/api/v1/users"
    header "User-Agent", "RS Policies"
    query "filter", 'status eq "ACTIVE"'
    query "limit", "200"
  end
  result do
    encoding "json"
    collect jmes_path(response,"[*]") do
      field "id", jmes_path(col_item,"id")
      field "status", jmes_path(col_item,"status")
      field "created", jmes_path(col_item,"created")
      field "lastLogin", jmes_path(col_item,"lastLogin")
      field "passwordChanged", jmes_path(col_item,"passwordChanged")
      field "firstName", jmes_path(col_item,"profile.firstName")
      field "lastName", jmes_path(col_item,"profile.lastName")
      field "email", jmes_path(col_item,"profile.email")
    end
  end
end

datasource "ds_filtered_users" do
  run_script $js_filtered_users, $ds_okta_users, $param_days
end

script "js_filtered_users", type: "javascript" do
  parameters "users","param_days"
  result "result"
  code <<-EOS
    var result = [];

    var date = new Date(new Date().setDate(new Date().getDate() - param_days)).toISOString();

    _.each(users, function(user){
      if (date > user["lastLogin"]){
        result.push(user)
      }
    })
  EOS
end

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "esc_deactivate_users" do
  automatic contains($param_automatic_action, "Deactivate Users")
  label "Deactivate User"
  description "Deactivate inactive Okta Users"
  run "deactivate_users", data, $param_okta_org_name
end

policy "policy_inactive_users" do
  validate $ds_filtered_users do
    summary_template "Inactive Okta Users"
    escalate $esc_email
    escalate $esc_deactivate_users
    check eq(size(data), 0)
    export do
      resource_level true
      field "firstName" do
        label "First Name"
      end
      field "lastName" do
        label "Last Name"
      end
      field "email" do
        label "Email Address"
      end
      field "lastLogin" do
        label "Last Login"
      end
      field "id" do
        label "ID"
      end
    end
  end
end

define deactivate_users($data, $param_okta_org_name) do

  foreach $user in $data do
    http_request(
      verb: "post",
      auth: $$auth_okta,
      host: join([$param_okta_org_name,".okta.com"]),
      https: true,
      href: join(["/api/v1/users/",$user["id"],"/lifecycle/deactivate"]),
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    )
  end

end
