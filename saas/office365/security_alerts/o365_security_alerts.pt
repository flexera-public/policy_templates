name "Office 365 Security Alerts"
rs_pt_ver 20180301
type "policy"
short_description "Reports Security Alerts that have been raised in Office 365. See the [README](https://github.com/flexera-public/policy_templates/tree/master/saas/office365/security_alerts/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
doc_link "https://github.com/flexera-public/policy_templates/tree/master/saas/office365/security_alerts/"
category "SaaS Management"
severity "medium"
default_frequency "weekly"
info(
  version: "3.0.4",
  provider: "Microsoft",
  service: "Office 365",
  policy_set: "",
  hide_skip_approvals: "true"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email Addresses"
  description "A list of email addresses to notify."
  default []
end

parameter "param_alert_severity" do
  type "list"
  category "Policy Settings"
  label "Alert Severity"
  description "The alert severity levels to report."
  allowed_values [ "Low", "Medium", "High" ]
  default [ "High" ]
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_flexera" do
  schemes "oauth2"
  label "Flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

credentials "auth_azure_graph" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Graph Credential from the list."
  tags "provider=azure_graph"
end

###############################################################################
# Datasources & Scripts
###############################################################################

# Get region-specific Flexera API endpoints
datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-EOS
  host_table = {
    "api.optima.flexeraeng.com": {
	    api: "api.flexera.com",
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com",
      grs: "grs-front.iam-us-east-1.flexeraeng.com",
      ui: "app.flexera.com",
      tld: "flexera.com"
    },
    "api.optima-eu.flexeraeng.com": {
	    api: "api.flexera.eu",
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com",
      grs: "grs-front.eu-central-1.iam-eu.flexeraeng.com",
      ui: "app.flexera.eu",
      tld: "flexera.eu"
    },
    "api.optima-apac.flexeraeng.com": {
	    api: "api.flexera.au",
      flexera: "api.flexera.au",
      fsm: "api.fsm-apac.flexeraeng.com",
      grs: "grs-front.ap-southeast-2.iam-apac.flexeraeng.com",
      ui: "app.flexera.au",
      tld: "flexera.au"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

# Get applied policy metadata for use later
datasource "ds_applied_policy" do
  request do
    auth $auth_flexera
    host val($ds_flexera_api_hosts, "flexera")
    path join(["/policy/v1/orgs/", rs_org_id, "/projects/", rs_project_id, "/applied-policies", switch(policy_id, join(["/", policy_id]), "")])
  end
end

datasource "ds_alerts" do
  request do
    run_script $js_alerts, $param_alert_severity
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item, "id")
      field "category", jmes_path(col_item, "category")
      field "createdDateTime", jmes_path(col_item, "createdDateTime")
      field "description", jmes_path(col_item, "description")
      field "eventDateTime", jmes_path(col_item, "eventDateTime")
      field "severity", jmes_path(col_item, "severity")
      field "status", jmes_path(col_item, "status")
      field "title", jmes_path(col_item, "title")
      field "incidentId", jmes_path(col_item, "incidentId")
      field "tenantId", jmes_path(col_item, "tenantId")
    end
  end
end

script "js_alerts", type: "javascript" do
  parameters "param_alert_severity"
  result "request"
  code <<-EOS
  vendors = [ "Office 365 Security and Compliance", "Office 365" ]
  vendor_filter = _.map(vendors, function(item) { return "vendorInformation/provider eq '" + item + "'"})
  sev_filter = _.map(param_alert_severity, function(item) { return "Severity eq '" + item.toLowerCase() + "'"})
  filter = "(" + vendor_filter.join(' or ') + ") and (" + sev_filter.join(' or ') + ")"

  var request = {
    auth: "auth_azure_graph",
    host: "graph.microsoft.com",
    path: "/v1.0/security/alerts_v2",
    query_params: { "filter": filter },
    headers: { "User-Agent": "RS Policies" }
  }
EOS
end

datasource "ds_alerts_incident" do
  run_script $js_alerts_incident, $ds_alerts, $ds_applied_policy
end

script "js_alerts_incident", type: "javascript" do
  parameters "ds_alerts", "ds_applied_policy"
  result "result"
  code <<-EOS
  result = _.map(ds_alerts, function(alert) {
    return {
      id: alert['id'],
      category: alert['category'],
      description: alert['description'],
      createdDateTime: alert['createdDateTime'],
      eventDateTime: alert['eventDateTime'],
      severity: alert['severity'],
      status: alert['status'],
      title: alert['title'],
      incidentId: alert['incidentId'],
      tenantId: alert['tenantId'],
      policy_name: ds_applied_policy['name']
    }
  })
EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_o365_alerts" do
  validate_each $ds_alerts_incident do
    summary_template "{{ with index data 0 }}{{ .policy_name }}{{ end }}: {{ len data }} Office 365 Security Alerts Found"
    check eq(val(item, "id"), "")
    escalate $esc_email
    export do
      resource_level true
      field "title" do
        label "Alert Title"
      end
      field "category" do
        label "Category"
      end
      field "severity" do
        label "Severity"
      end
      field "description" do
        label "Description"
      end
      field "eventDateTime" do
        label "Event Date"
      end
      field "status" do
        label "Status"
      end
      field "incidentId" do
        label "Incident ID"
      end
      field "tenantId" do
        label "Tenant ID"
      end
      field "id" do
        label "ID"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
