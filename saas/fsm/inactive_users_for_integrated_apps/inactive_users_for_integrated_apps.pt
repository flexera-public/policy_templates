name "SaaS Manager - Inactive Users for Integrated Applications"
rs_pt_ver 20180301
type "policy"
short_description "Gets inactive users for the Integrated Applications of the specified Managed SaaS Application."
long_description ""
severity "low"
category "SaaS Management"
default_frequency "weekly"
info(
  version: "3.0",
  provider: "Flexera SaaS Manager",
  service: "",
  policy_set: ""
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
  default []
end

parameter "param_application_name" do
  type "list"
  category "Policy Settings"
  label "Application Name"
  description "Select Application Name e.g., 'AppExchange Sandbox', 'Office 365', 'Salesforce Sandbox'"
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_flexera" do
  schemes "oauth2"
  label "Flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Datasources & Scripts
###############################################################################

# Get applied policy metadata for use later
datasource "ds_applied_policy" do
  request do
    auth $auth_flexera
    host rs_governance_host
    path join(["/api/governance/projects/", rs_project_id, "/applied_policies/", policy_id])
    header "Api-Version", "1.0"
  end
end

datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-EOS
  host_table = {
    "api.optima.flexeraeng.com": {
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com"
    },
    "api.optima-eu.flexeraeng.com": {
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com"
    },
    "api.optima-apac.flexeraeng.com": {
      flexera: "api.flexera.au",
      fsm: "api.fsm-apac.flexeraeng.com"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

datasource "ds_managed_apps" do
  request do
    auth $auth_flexera
    host val($ds_flexera_api_hosts, "flexera")
    path join(["/saas/v1/orgs/", rs_org_id, "/managed-apps"])
  end
  result do
    encoding "json"
    collect jmes_path(response, "values") do
    field "id", jmes_path(col_item,"id")
    field "vendor_name", jmes_path(col_item, "vendorName")
    field "app_name", jmes_path(col_item, "appName")
    field "app_id", jmes_path(col_item, "appId")
    field "name", jmes_path(col_item, "name")
    end
  end
end

datasource "ds_app_id_output" do
  run_script $js_app_id_output, $ds_managed_apps, $param_application_name
end

script "js_app_id_output", type: "javascript" do
  parameters "ds_managed_apps", "param_application_name"
  result "result"
  code <<-EOS
  result = _.filter(ds_managed_apps, function(app) {
    return _.contains(param_application_name, app['name'])
  })
EOS
end

datasource "ds_integrated_apps" do
  iterate $ds_app_id_output
  request do
    auth $auth_flexera
    host val($ds_flexera_api_hosts, "fsm")
    path join(["/svc/orgs/", rs_org_id, "/sso-discovery/", val(iter_item, "app_id")])
    query "includeInactive", "false"
    query "includeUnmapped", "true"
    query "page", "1"
    query "pageSize", "400"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items") do
      field "managed_product_id", jmes_path(col_item, "mappedManagedProduct.id")
      field "managed_product_name", jmes_path(col_item, "mappedManagedProduct.name")
      field "managed_product_children", jmes_path(col_item, "mappedManagedProduct.managedProductChildren")
    end
  end
end

datasource "ds_integrated_apps_filtered" do
  run_script $js_integrated_apps_filtered, $ds_integrated_apps
end

script "js_integrated_apps_filtered", type: "javascript" do
  parameters "ds_integrated_apps"
  result "result"
  code <<-EOS
  result = _.filter(ds_integrated_apps, function(ia) { return ia['managed_product_id'] != null })
EOS
end

datasource "ds_app_users" do
  iterate $ds_integrated_apps_filtered
  request do
    auth $auth_flexera
    host val($ds_flexera_api_hosts, "fsm")
    path join(["/svc/orgs/", rs_org_id, "/managed-products/", val(iter_item, "managed_product_id"), "/managed-product-agents"])
    query "asc", "true"
    query "sort", "uniqueId"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items") do
      field "user_unique_id", jmes_path(col_item, "uniqueId")
      field "user_first_name", jmes_path(col_item, "firstName")
      field "user_last_name", jmes_path(col_item, "lastName")
      field "user_email", jmes_path(col_item, "email")
      field "user_employee_status", jmes_path(col_item, "employeeStatus")
      field "managed_product_id", jmes_path(col_item, "managedProductId")
      field "managed_product_name", val(iter_item, "managed_product_name")
    end
  end
end

datasource "ds_app_inactive_users" do
  run_script $js_app_inactive_users, $ds_app_users, $ds_applied_policy
end

script "js_app_inactive_users", type: "javascript" do
  parameters "ds_app_users", "ds_applied_policy"
  result "result"
  code <<-EOS
  result = _.filter(ds_app_users, function(user) { return user['user_employee_status'] == "Inactive" })

  if (result.length > 0) {
    result[0]['policy_name'] = ds_applied_policy['name']
  }
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_managed_apps_inactive_users" do
  validate_each $ds_app_inactive_users do
    summary_template "{{ with index data 0 }}{{ .policy_name }}{{ end }}: SaaS Manager Inactive Users for Integrated Applications"
    detail_template "Report showing list of Inactive Users for Integrated Applications"
    check eq(0, 1)
    escalate $esc_email
    export do
      resource_level false
      field "managed_product_name" do
        label "Integrated Application Name"
      end
      field "user_unique_id" do
        label "User ID"
      end
      field "user_first_name" do
        label "First Name"
      end
      field "user_last_name" do
        label "Last Name"
      end
      field "user_email" do
        label "Email"
      end
      field "user_employee_status" do
        label "Employee Status"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
