name "SaaS Manager - Inactive Users for Integrated Applications"
rs_pt_ver 20180301
type "policy"
short_description "Gets inactive users for the Integrated Applications of the specified Managed SaaS Application."
long_description ""
severity "low"
category "SaaS Management"
default_frequency "daily"
info(
  version: "2.0",
  provider: "Flexera",
  service: "All",
  policy_set: "N/A"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_application_name" do
  type "list"
  label "Application Name"
  description "Select Application Name e.g., 'AppExchange Sandbox','Office 365', 'Salesforce Sandbox'"
end

parameter "param_email" do
  type "list"
  label "Email addresses"
end

###############################################################################
# Authentication
###############################################################################

#AUTHENTICATE WITH FLEXERA/SAAS MANAGEMENT
credentials "auth_rs" do
  schemes "oauth2"
  label "SaaS_Management"
  description "Select FlexeraOne OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Datasources and Scripts
###############################################################################

#GET MANAGED APPLICATION LIST
datasource "ds_managed_apps" do
  request do
    auth $auth_rs
    host "api.flexera.com"
    path join(["/saas/v1/orgs/", rs_org_id, "/managed-apps"])
  end
  result do
    encoding "json"
    collect jmes_path(response, "values") do
    field "id", jmes_path(col_item,"id")
    field "vendor_name", jmes_path(col_item, "vendorName")
    field "app_name", jmes_path(col_item, "appName")
    field "app_id", jmes_path(col_item, "appId")
    field "name", jmes_path(col_item, "name")
    end
  end
end

#IDENTIFY MANAGED APP IDS 
datasource "ds_app_id_output" do
  run_script $js_get_app_id, $ds_managed_apps, $param_application_name
end

script "js_get_app_id", type: "javascript" do
  parameters "managed_apps","application_name"
  result "result"
  code <<-EOS
    var result = []
    _.each(managed_apps, function(ma){
      _.each(application_name, function(app){
        if(ma.name === app){
          result.push( { "application_id": ma.id } )
        }
      })
    })
  EOS
end

#GET INTEGRATED APPLICATIONS
datasource "ds_integrated_apps" do
  iterate $ds_app_id_output
  request do
    auth $auth_rs
    host "api.fsm.flexeraeng.com"
    path join(["/svc/orgs/", rs_org_id, "/sso-discovery/", val(iter_item,"application_id")]) 
    query "includeInactive", "false"
    query "includeUnmapped", "true"
    query "page", "1"
    query "pageSize", "400"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items") do
        field "managed_product_id", jmes_path(col_item, "mappedManagedProduct.id")
        field "managed_product_name", jmes_path(col_item, "mappedManagedProduct.name")
        field "managed_product_children", jmes_path(col_item, "mappedManagedProduct.managedProductChildren")
    end
  end
end

#FILTER OUT NULLS
datasource "ds_integrated_apps_filtered" do
  run_script $js_filter_nulls, $ds_integrated_apps
end

script "js_filter_nulls", type: "javascript" do
  parameters "integrated_apps"
  result "result"
  code <<-EOS
    var result = 
    _.filter(integrated_apps, function(ia){ return ia.managed_product_id != null })
  EOS
end

#GET INTEGRATED APPLICATION USERS LIST
datasource "ds_app_users" do
  iterate $ds_integrated_apps_filtered
  request do
    auth $auth_rs
    host "api.fsm.flexeraeng.com"
    path join(["/svc/orgs/", rs_org_id, "/managed-products/", val(iter_item,"managed_product_id"), "/managed-product-agents"])
    query "asc", "true"
    query "sort", "uniqueId"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items") do
    field "user_unique_id", jmes_path(col_item, "uniqueId")
    field "user_first_name", jmes_path(col_item, "firstName")
    field "user_last_name", jmes_path(col_item, "lastName")
    field "user_email", jmes_path(col_item, "email")
    field "user_employee_status", jmes_path(col_item, "employeeStatus")
    field "managed_product_id", jmes_path(col_item, "managedProductId")
    field "managed_product_name", val(iter_item,"managed_product_name")
    end
  end
end

#FILTER FOR INACTIVE USERS
datasource "ds_app_inactive_users" do
  run_script $js_filter_inactive_users, $ds_app_users
end

script "js_filter_inactive_users", type: "javascript" do
  parameters "app_users"
  result "result"
  code <<-EOS
    var result =
    _.filter(app_users, function(au){ return au.user_employee_status == "Inactive" })
  EOS
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_inactive_users_report" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

###############################################################################
# Policy
###############################################################################

policy "policy_managed_apps_inactive_users" do
  validate $ds_app_inactive_users do
    summary_template "SaaS Manager Inactive Users for Integrated Applications"
    detail_template "Report showing list of Inactive Users for Integrated Applications"
    escalate $esc_inactive_users_report
    check eq(0,1)
    export do
      resource_level false
      field "managed_product_name" do
        label "Integrated Application Name"
      end
      field "user_unique_id" do
        label "User ID"
      end
      field "user_first_name" do
        label "First Name"
      end
      field "user_last_name" do
        label "Last Name"
      end   
      field "user_email" do
        label "Email"
      end
      field "user_employee_status" do
        label "Employee Status"
      end
    end
  end
end
