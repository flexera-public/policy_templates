name "SaaS Manager - Inactive Users by Department"
rs_pt_ver 20180301
type "policy"
short_description "This policy will create an incident when Flexera SaaS Manager identifies inactive or never active users for managed applications. See the [README](https://github.com/flexera-public/policy_templates/tree/master/saas/fsm/inactive_users_by_dept/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "medium"
category "SaaS Management"
default_frequency "daily"
info(
  version: "3.0",
  provider: "Flexera SaaS Manager",
  service: "",
  policy_set: ""
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
  default []
end

parameter "param_num_days" do
  type "number"
  category "Policy Settings"
  label "Inactive Days Threshold"
  description "Number of inactive days to trigger an incident"
  default 60
  min_value 60
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_fsm" do
  schemes "oauth2"
  label "FSM"
  description "Select the FSM Resource Manager Credential from the list."
  tags "provider=flexera_fsm"
end

###############################################################################
# Pagination
###############################################################################

pagination "pagination_inactive" do
  get_page_marker do
    body_path jq(response, 'if length < 10000 then null else if $marker != "" then $marker | tonumber + 1 else 2 end end')
  end
  set_page_marker do
    query "page"
  end
end

###############################################################################
# Datasources & Scripts
###############################################################################

datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-EOS
  host_table = {
    "api.optima.flexeraeng.com": {
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com"
    },
    "api.optima-eu.flexeraeng.com": {
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com"
    },
    "api.optima-au.flexeraeng.com": {
      flexera: "api.flexera.au",
      fsm: "api.fsm-au.flexeraeng.com"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

#GET TOTAL PRODUCT ABANDONED USERS (INACTIVE)
datasource "ds_inactive_users" do
  request do
    auth $auth_fsm
    pagination $pagination_inactive
    host val($ds_flexera_api_hosts, "fsm")
    path join(["/svc/orgs/", rs_org_id, "/analytics/product-abandoned-users"])
    header "content-type", "application/json"
    query "pageSize", "10000"
    query "page", "1"
    query "employeeFilter", "active"
    query "sort", "department"
    query "asc", "true"
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "department", jmes_path(col_item, "department")
      field "location", jmes_path(col_item, "location")
      field "email", jmes_path(col_item, "email")
      field "first_name", jmes_path(col_item, "firstName")
      field "last_name", jmes_path(col_item, "lastName")
      field "managed_product_name", jmes_path(col_item, "managedProductName")
      field "days_since_active", jmes_path(col_item, "daysSinceActive")
      field "total_items", jmes_path(col_item, "totalItems")
    end
  end
end

#FORMAT DATA
datasource "ds_formatted_data" do
  run_script $js_formatted_data, $ds_inactive_users
end

script "js_formatted_data", type: "javascript" do
  parameters "ds_inactive_users"
  result "result"
  code <<-EOS
  result = []

  _.each(ds_inactive_users, function(user) {
    days_since_active = user["days_since_active"]
    if (days_since_active == 0) {  days_since_active = "Never Active" }

    result.push({
      department: user['department'],
      location: user['location'],
      email: user['email'],
      first_name: user['first_name'],
      last_name: user['last_name'],
      managed_product_name: user['managed_product_name'],
      total_items: user['total_items'],
      days_since_active: days_since_active
    })
  })
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_fsm_inactive_users_by_dept" do
  validate_each $ds_formatted_data do
    summary_template "{{ len data }} Inactive SaaS Users"
    check ne(val(item, "days_since_active"), "Never Active")
    check lt(val(item, "days_since_active"), $param_num_days)
    escalate $esc_email
    export do
      field "last_name" do
        label "Last Name"
      end
      field "first_name" do
        label "First Name"
      end
      field "email" do
        label "Email"
      end
      field "department" do
        label "Department"
      end
      field "days_since_active" do
        label "Days Since Last Active"
      end
      field "location" do
        label "Location"
      end
      field "managed_product_name" do
        label "Application"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
