name "SaaS Manager - Redundant Apps"
rs_pt_ver 20180301
type "policy"
short_description "This policy will create an incident when Flexera SaaS Manager identifies application categories with an excessive number of applications. See the [README](https://github.com/flexera-public/policy_templates/tree/master/saas/fsm/redundant_apps/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "low"
category "SaaS Management"
default_frequency "weekly"
info(
  version: "3.0",
  provider: "Flexera SaaS Manager",
  service: "",
  policy_set: ""
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
  default []
end

parameter "param_too_many_apps" do
  type "number"
  category "Policy Settings"
  label "Excessive Number of Apps in a Single Category"
  description "Enter an excessive number of apps per category. If a single category has N number of apps or greater then an incident will be raised."
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_fsm" do
  schemes "oauth2"
  label "FSM"
  description "Select the FSM Resource Manager Credential from the list."
  tags "provider=flexera_fsm"
end

###############################################################################
# Datasources & Scripts
###############################################################################

datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-EOS
  host_table = {
    "api.optima.flexeraeng.com": {
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com"
    },
    "api.optima-eu.flexeraeng.com": {
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com"
    },
    "api.optima-apac.flexeraeng.com": {
      flexera: "api.flexera.au",
      fsm: "api.fsm-apac.flexeraeng.com"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

datasource "ds_managed_products" do
  request do
    auth $auth_fsm
    host val($ds_flexera_api_hosts, "fsm")
    path join(["/svc/orgs/", rs_org_id, "/managed-products"])
    header "content-type", "application/json"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items[*]") do
      field "id", val(col_item, "id")
      field "name", val(col_item, "name")
      field "category", jmes_path(col_item, "product.category.categoryName")
    end
  end
end

datasource "ds_filtered_apps" do
  run_script $js_filtered_apps, $ds_managed_products, $param_too_many_apps
end

script "js_filtered_apps", type: "javascript" do
  parameters "ds_managed_products", "param_too_many_apps"
  result "result"
  code <<-EOS
  result = []
  app_categories = _.uniq(_.pluck(ds_managed_products, 'category'))

  _.each(app_categories, function(uniqueAppCategory) {
    app_list = []
    count = 0

    categoryApps = _.filter(ds_managed_products, function(app) {
      return app["category"] == uniqueAppCategory && uniqueAppCategory != null
    })

    if (categoryApps.length >= param_too_many_apps) {
      result.push({
        appCategory: uniqueAppCategory,
        appDetails: _.pluck(categoryApps, 'name').join(', ')
      })
    }
  })

  result = _.sortBy(result, 'appCategory')
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_fsm_excessive_apps" do
  validate $ds_filtered_apps do
    summary_template "{{ len data }} SaaS App Categories with more than {{ parameters.param_too_many_apps }} Apps"
    check eq(size(data), 0)
    escalate $esc_email
    export do
      field "appCategory" do
        label "Application Category"
      end
      field "appDetails" do
        label "SaaS Applications"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
