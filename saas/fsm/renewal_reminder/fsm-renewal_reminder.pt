name "SaaS Manager - Renewal Reminder"
rs_pt_ver 20180301
type "policy"
short_description "This policy will create an incident when Flexera SaaS Manager identifies applications whose expiration date is approaching. See the [README](https://github.com/flexera/policy_templates/tree/master/saas/fsm/renewal_reminder/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "medium"
category "SaaS Management"
default_frequency "daily"
info(
  version: "2.4",
  provider: "Flexera SaaS Manager",
  service: "",
  policy_set: ""
)

###############################################################################
# User inputs
###############################################################################

parameter "param_days" do
  type "number"
  label "Upcoming Number of Days"
  default 60
  description "If an application renewal is due in the upcoming time period, raise an incident"
end

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify"
end

###############################################################################
# Authentication
###############################################################################

#authenticate with FSM
credentials "fsm_auth" do
  schemes "oauth2"
  label "FSM"
  description "Select the FSM Resource Manager Credential from the list."
  tags "provider=flexera_fsm"
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_get_host" do
  run_script $js_get_host, rs_governance_host
end

datasource "ds_num_products" do
  iterate $ds_get_host
  request do
    auth $fsm_auth
    host val(iter_item,"host")
    verb "GET"
    scheme "https"
    path join(["/svc/orgs/", rs_org_id, "/managed-products"])
    header "content-type", "application/json"
  end
  result do
    encoding "json"
    field "totalItems", jmes_path(response, "totalItems")
    field "saas_host", val(iter_item,"host")
  end
end

datasource "ds_products" do
  request do
    run_script $js_products, $ds_num_products, rs_org_id
  end
  result do
    encoding "json"
    collect jmes_path(response, "items[*]") do
      field "application", jmes_path(col_item, "name")
      field "pointOfContactEmail", jmes_path(col_item, "pointOfContactEmail")
      field "vendor", jmes_path(col_item, "product.vendor.name")
      field "annualCost", jmes_path(col_item, "annualCost")
      field "licenses" do
        collect jmes_path(col_item, "licenses") do
          field "lic_id", jmes_path(col_item, "id")
        end
      end
    end
  end
end

datasource "ds_licenses_summary" do
  iterate $ds_get_host
  request do
    auth $fsm_auth
    host val(iter_item,"host")
    verb "GET"
    scheme "https"
    path join(["/svc/orgs/", rs_org_id, "/licenses/summaries"])
    header "content-type", "application/json"
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "lic_id", jmes_path(col_item, "id")
      field "end_date", jmes_path(col_item, "endDate")
    end
  end
end

datasource "ds_products_with_enddate" do
  run_script $js_products_with_enddate, $ds_products, $ds_licenses_summary, $param_days
end

###############################################################################
# Scripts
###############################################################################

script "js_get_host", type: "javascript" do
  parameters "rs_governance_host"
  result "result"
  code <<-EOS
    var result = [];
    if(rs_governance_host.indexOf(".eu") !== -1 || rs_governance_host.indexOf("-eu") !== -1){
      result.push({host: "api.fsm-eu.flexeraeng.com"});
    }else{
      result.push({host: "api.fsm.flexeraeng.com"});
    }
  EOS
end

script "js_products_with_enddate", type: "javascript" do
  parameters "ds_products", "ds_licenses_summary", "param_days"
  result "result"
  code <<-EOS
    var result = [];
    var lic_enddate = {};
    _.each(ds_licenses_summary, function(license){
      if(license.end_date != null){
        lic_enddate[license.lic_id]= license.end_date;
      }
    })
    var end_date="";
    _.each(ds_products, function(product){
      _.each(product.licenses, function(license){
        end_date=lic_enddate[license.lic_id];
      })
      var date = new Date();
      date = date.setHours(24 * param_days);
      date = new Date(date);
      if(end_date != null){
        var expiration_date = new Date(end_date);
        if(expiration_date < date){
          result.push({
            "application":product.application
            "pointOfContactEmail":product.pointOfContactEmail
            "vendor":product.vendor
            "annualCost": product.annualCost
            "endDate":end_date
          })
        }
      }
    })
    result = _.sortBy(result, 'endDate');
  EOS
end

script "js_products", type: "javascript" do
  parameters "ds_num_products", "rs_org_id"
  result "request"
  code <<-EOS
  request = {
    auth: "fsm_auth",
    host: ds_num_products[0]["saas_host"].toString(),
    verb: "GET",
    scheme: "https",
    path: "/svc/orgs/"+rs_org_id+"/managed-products",
    headers: {
      "content-type": "application/json"
    },
    query_params: {
      "pageSize": ds_num_products[0]["totalItems"].toString(),
      "includeInactive": "false"
    }
  }
EOS
end

###############################################################################
# Escalations
###############################################################################

escalation "report_summary" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

###############################################################################
# Policy
###############################################################################

policy "policy_fsm_renewal_reminder" do
  validate $ds_products_with_enddate do
      summary_template "{{ len data }} Expiring Applications Found"

      escalate $report_summary
      check eq(size(data), 0)
      export do
        field "endDate" do
          label "Expiration Date (YYYY-MM-DD)"
        end
        field "vendor" do
          label "Vendor"
        end
        field "id" do
          label "Application"
          path "application"
        end
        field "pointOfContactEmail" do
          label "Point of Contact"
        end
        field "annualCost" do
          label "Annual Cost"
        end
    end
  end
end
