name "Google Committed Use Discount (CUD)"
rs_pt_ver 20180301
type "policy"
short_description "A policy that sends email notifications for all Google CUD's. \n See the [README](https://github.com/rightscale/policy_templates/tree/master/cost/google/cud_report) and [docs.rightscale.com/policies](http://docs.rightscale.com/policies/) to learn more \n"
long_description "Version: 1.2"
category "Cost"
severity "low"
tenancy "single"

###############################################################################
# Permissions
###############################################################################

permission "general_permissions" do
  resources "rs_cm.credentials", "rs_cm.audit_entries", "rs_cm.clouds"
  actions   "rs_cm.*"
end

##################
# User inputs    #
##################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_google_project" do
  type "string"
  label "Google Cloud Project"
  allowed_pattern /^[0-9a-z:\.-]+$/
end

parameter "param_cud_status" do
  label "CUD status"
  type "string"
  allowed_values "All","Active","Expired"
  default "All"
end

#auth type: Oauth2, using JWT token.
auth "auth_google", type: "oauth2" do
  token_url "https://oauth2.googleapis.com/token"
  grant type: "jwt_bearer" do
	iss cred("GC_SA_CLIENT_EMAIL")
	aud "https://oauth2.googleapis.com/token"
	additional_claims do {
      "scope" => "https://www.googleapis.com/auth/compute"
     }
	 end
	signing_key cred("GC_SA_PRIVATE_KEY")
  end
end

pagination "google_pagination" do
  get_page_marker do
    body_path "{{nextPageToken}}"
  end
  set_page_marker do
    query "pageToken"
  end
end

#https://cloud.google.com/compute/docs/instances/signing-up-committed-use-discounts#viewing_active_commitments
datasource "ds_committed_use_discount" do
  request do
    auth $auth_google
    host "www.googleapis.com"
  header "Content-Type", "application/json"
    path join(["/compute/v1/projects/",$param_google_project,"/aggregated/commitments"])
    query "accept" , "application/json"
  end

  result do
  encoding "json"
  collect jmes_path(response, "items.*.commitments[0]") do
  field "cud_id", jmes_path(col_item, 'id')
  field "name", jmes_path(col_item, 'name')
  field "region", jmes_path(col_item, 'region')
  field "status", jmes_path(col_item, 'status')
  field "plan", jmes_path(col_item, 'plan')
  field "endTimestamp", jmes_path(col_item, 'endTimestamp')
  field "startTimestamp", jmes_path(col_item, 'startTimestamp')
  end
 end
end

datasource "ds_committed_use_discount_map" do
  run_script $js_committed_use_discount_map, $ds_committed_use_discount, $param_cud_status
end

#Filter the JSON, based on user selection for param 'param_cud_status' and formating Date.
script "js_committed_use_discount_map", type: "javascript" do
  parameters "commitments","param_cud_status"
  result "content"
  code <<-EOS
  var content=[];
  for(var i=0; i < commitments.length ; i++){
	commitment = commitments[i]

	var start_date = (new Date(commitment['startTimestamp'])).toISOString().slice(0, 10);
	var end_date = (new Date(commitment['endTimestamp'])).toISOString().slice(0, 10);

	commitmentDetails={
			cud_id: commitment['cud_id'],
			name: commitment['name'],
			region: commitment['region'],
			status: commitment['status'],
			startTimestamp: start_date,
			plan: commitment['plan'],
			endTimestamp: end_date
		}

	if(param_cud_status != 'All'){
		if(commitments[i].status === param_cud_status.toUpperCase()){
			content.push(commitmentDetails)
		}
	}else{
			content.push(commitmentDetails)
		}
  }
EOS
end

escalation "report_list_of_CUDs" do
   email $param_email
end

policy "policy_committed_use_discount" do
  validate $ds_committed_use_discount_map do
	summary_template "{{ parameters.param_google_project }} : List of {{ parameters.param_cud_status }} Committed Use Discounts in Google Cloud"
	detail_template <<-EOS
# {{ parameters.param_cud_status }} Committed Use Discounts in Google Cloud for Project: {{ parameters.param_google_project }}

| CUD Id |  Name  | Region | Status | Plan | StartTimestamp | EndTimestamp |
| ------ | ------ | ------ | ------ | ---- | -------------- | ------------ |
{{ range data -}}
| {{.cud_id}} | {{.name}} | {{.region}} | {{.status}} | {{.plan}} | {{.startTimestamp}} | {{.endTimestamp}} |
{{ end -}}

###### Policy Applied in Account: {{ rs_project_name }} (Account ID: {{ rs_project_id }}) within Org: {{ rs_org_name }} (Org ID: {{ rs_org_id }})
EOS
	escalate $report_list_of_CUDs
	check eq(size(data),0)
  end
end
