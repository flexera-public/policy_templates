name "Google Committed Use Discount (CUD)"
rs_pt_ver 20180301
type "policy"
short_description "A policy that sends email notifications for all Google CUD's. \n See the [README](https://github.com/flexera/policy_templates/tree/master/cost/google/cud_report) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more \n"
long_description ""
category "Cost"
severity "low"
tenancy "single"
default_frequency "daily"
info(
  version: "2.7",
  provider: "GCE",
  service: "Compute",
  policy_set: "Committed Use Discount"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_cud_status" do
  label "CUD status"
  type "string"
  allowed_values "All","Active","Expired"
  default "All"
end

###############################################################################
# Authentication
###############################################################################

# authenticate with Google
credentials "auth_google" do
  schemes "oauth2"
  label "Google"
  description "Select the Google Cloud Credential from the list."
  tags "provider=gce"
end

###############################################################################
# Pagination
###############################################################################

pagination "google_pagination" do
  get_page_marker do
    body_path "nextPageToken"
  end
  set_page_marker do
    query "pageToken"
  end
end

###############################################################################
# Datasources
###############################################################################

#get all google project
datasource "ds_google_project" do
  request do
    auth $auth_google
    pagination $google_pagination
    host "cloudresourcemanager.googleapis.com"
    path "/v1/projects/"
    query "filter", "lifecycleState=ACTIVE"
  end
  result do
    encoding "json"
    collect jmes_path(response, "projects[*]") do
      field "projectNumber", jmes_path(col_item,"projectNumber")
      field "projectId", jmes_path(col_item,"projectId")
    end
  end
end

#https://cloud.google.com/compute/docs/instances/signing-up-committed-use-discounts#viewing_active_commitments
datasource "ds_committed_use_discount" do
  iterate $ds_google_project
  request do
    auth $auth_google
    host "www.googleapis.com"
    header "Content-Type", "application/json"
    path join(["/compute/v1/projects/",val(iter_item,"projectId"),"/aggregated/commitments"])
    query "accept" , "application/json"
    ignore_status [403,404]
  end
  result do
    encoding "json"
    collect jmes_path(response, "items.*.commitments[]") do
      field "cud_id", jmes_path(col_item, 'id')
      field "name", jmes_path(col_item, 'name')
      field "region", jmes_path(col_item, 'region')
      field "status", jmes_path(col_item, 'status')
      field "plan", jmes_path(col_item, 'plan')
      field "endTimestamp", jmes_path(col_item, 'endTimestamp')
      field "startTimestamp", jmes_path(col_item, 'startTimestamp')
      field "projectId", val(iter_item, "projectId")
    end
  end
end

datasource "ds_committed_use_discount_map" do
  run_script $js_committed_use_discount_map, $ds_committed_use_discount, $param_cud_status
end

###############################################################################
# Scripts
###############################################################################

#Filter the JSON, based on user selection for param 'param_cud_status' and formating Date.
script "js_committed_use_discount_map", type: "javascript" do
  parameters "commitments","param_cud_status"
  result "content"
  code <<-EOS
    var content=[];
    for(var i=0; i < commitments.length ; i++){
      commitment = commitments[i]

      var start_date = (new Date(commitment['startTimestamp'])).toISOString().slice(0, 10);
      var end_date = (new Date(commitment['endTimestamp'])).toISOString().slice(0, 10);

      commitmentDetails={
        cud_id: commitment['cud_id'],
        name: commitment['name'],
        region: commitment['region'],
        status: commitment['status'],
        startTimestamp: start_date,
        plan: commitment['plan'],
        endTimestamp: end_date,
        projectId: commitment['projectId']
      }

      if(param_cud_status != 'All'){
        if(commitments[i].status === param_cud_status.toUpperCase()){
          content.push(commitmentDetails)
        }
      } else {
        content.push(commitmentDetails)
      }
    }
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_committed_use_discount" do
  validate $ds_committed_use_discount_map do
    summary_template " List of {{ parameters.param_cud_status }} Committed Use Discounts in Google Cloud"
    escalate $report_list_of_CUDs
    check eq(size(data),0)
    export do
      resource_level true
      field "projectId" do
        label "Project ID"
      end
      field "name" do
        label "Name"
      end
      field "region" do
        label "Zone"
      end
      field "status" do
        label "Status"
      end
      field "plan" do
        label "Plan"
      end
      field "startTimestamp" do
        label "Start Date"
      end
      field "endTimestamp" do
        label "End Date"
      end
      field "id" do
        label "CUD Id"
        path "cud_id"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "report_list_of_CUDs" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
