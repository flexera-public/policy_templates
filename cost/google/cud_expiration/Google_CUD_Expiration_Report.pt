name "Google Expiring Committed Use Discount (CUD)"
rs_pt_ver 20180301
type "policy"
short_description "A policy that sends email notifications when Google CUD's are about to expire. \n See the [README](https://github.com/rightscale/policy_templates/tree/master/cost/google/cud_expiration) and [docs.rightscale.com/policies](http://docs.rightscale.com/policies/) to learn more \n"
long_description "Version: 1.1"
category "Cost"
severity "low"
tenancy "single"

###############################################################################
# Permissions
###############################################################################

permission "perm_read_creds" do
  actions   "rs_cm.show_sensitive","rs_cm.index_sensitive"
  resources "rs_cm.credentials"
end

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_google_project" do
  type "string"
  label "Google Cloud Project"
  allowed_pattern /^[0-9a-z:\.-]+$/
end

parameter "param_days_expiration" do
  label "Identify CUDs that are expiring in the given number of days"
  type "number"
  default 15
end

###############################################################################
# Authentication
###############################################################################

auth "auth_google", type: "oauth2" do
  token_url "https://oauth2.googleapis.com/token"
  grant type: "jwt_bearer" do
    iss cred("GC_SA_CLIENT_EMAIL")
    aud "https://oauth2.googleapis.com/token"
    additional_claims do {
      "scope" => "https://www.googleapis.com/auth/compute"
    }
    end
    signing_key cred("GC_SA_PRIVATE_KEY")
  end
end

###############################################################################
# Pagination
###############################################################################

pagination "google_pagination" do
  get_page_marker do
    body_path "{{nextPageToken}}"
  end
  set_page_marker do
    query "pageToken"
  end
end

###############################################################################
# Datasources
###############################################################################

#https://cloud.google.com/compute/docs/instances/signing-up-committed-use-discounts#viewing_active_commitments
datasource "ds_committed_use_discount" do
  request do
    auth $auth_google
    host "www.googleapis.com"
    header "Content-Type", "application/json"
    path join(["/compute/v1/projects/",$param_google_project,"/aggregated/commitments"])
    query "accept" , "application/json"
    query "filter", 'status="ACTIVE"'
  end
  result do
    encoding "json"
    collect jmes_path(response, "items.*.commitments[0]") do
      field "cud_id", jmes_path(col_item, 'id')
      field "name", jmes_path(col_item, 'name')
      field "region", jmes_path(col_item, 'region')
      field "status", jmes_path(col_item, 'status')
      field "plan", jmes_path(col_item, 'plan')
      field "endTimestamp", jmes_path(col_item, 'endTimestamp')
      field "startTimestamp", jmes_path(col_item, 'startTimestamp')
    end
  end
end

datasource "ds_committed_use_discount_map" do
  run_script $js_committed_use_discount_map, $ds_committed_use_discount, $param_days_expiration
end

###############################################################################
# Scripts
###############################################################################

#Filter the JSON, based on user input for param 'param_days_expiration' and formating Date.
script "js_committed_use_discount_map", type: "javascript" do
  parameters "commitments","param_days_expiration"
  result "content"
  code <<-EOS
  var content=[];
  var now = new Date();
  var one_day=1000*60*60*24;
  var date1_ms = now.getTime();

  for(var i=0; i < commitments.length ; i++){
    commitment = commitments[i]

    var start_date = (new Date(commitment['startTimestamp'])).toISOString().slice(0, 10);
    var end_date = (new Date(commitment['endTimestamp'])).toISOString().slice(0, 10);
    var date2_ms = (new Date(commitment['endTimestamp'])).getTime();
    var difference_ms = date2_ms - date1_ms;
    var daysLeft = Math.round(difference_ms/one_day);

    if(daysLeft <= param_days_expiration) {
      content.push({
        cud_id: commitment['cud_id'],
        name: commitment['name'],
        region: commitment['region'].split('/').reverse()[0],
        status: commitment['status'],
        startTimestamp: start_date,
        plan: commitment['plan'],
        endTimestamp: end_date,
        daysExpiration: daysLeft
      })
    }
  }
EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_committed_use_discount_expiration" do
  validate $ds_committed_use_discount_map do
    summary_template "{{ parameters.param_google_project }} : {{ len data }} Committed Use Discount(s) in Google Cloud Expiring"
    detail_template <<-EOS
# Expiring Committed Use Discounts in Google Cloud
### Project: {{ parameters.param_google_project }}
### Threshold: {{ parameters.param_days_expiration }} Days

| CUD Id |  Name  | Region | Status | Plan | Start Date | End Date | Days Until Expiration |
|:------:|:------:|:------:|:------:|:----:|:----------:|:--------:|:---------------------:|
{{ range data -}}
| {{.cud_id}} | {{.name}} | {{.region}} | {{.status}} | {{.plan}} | {{.startTimestamp}} | {{.endTimestamp}} | {{.daysExpiration}} |
{{ end -}}

###### Policy Applied in Account: {{ rs_project_name }} (Account ID: {{ rs_project_id }}) within Org: {{ rs_org_name }} (Org ID: {{ rs_org_id }})
EOS
    escalate $report_list_of_CUDs
    check eq(size(data),0)
  end
end


###############################################################################
# Escalations
###############################################################################

escalation "report_list_of_CUDs" do
  email $param_email
end
