name "Unattached IP Addresses"
rs_pt_ver 20180301
type "policy"
short_description "Checks Unutilized IP Addresses and deletes them with approval. See the [README](https://github.com/flexera/policy_templates/tree/master/cost/unattached_addresses) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "low"
category "Cost"
default_frequency "daily"
info(
  version: "1.8",
  provider: "Flexera Cloud Management",
  service: "",
  policy_set: "Unused IP Addresses"
)

permission "perm_read__ip_addresses" do
  actions   "rs_cm.show","rs_cm.index"
  resources "rs_cm.ip_addresses","rs_cm.clouds"
end

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_whitelist" do
  type "list"
  label "White list of IP Addresses to keep"
end

parameter "param_automatic_action" do
  type "list"
  label "Automatic Actions"
  description "When this value is set, this policy will automatically take the selected action(s)"
  allowed_values ["Delete IP Addresses"]
end

auth "auth_rs", type: "rightscale"

resources "clouds", type: "rs_cm.clouds"

resources "addresses", type: "rs_cm.ip_addresses" do
  iterate @clouds
  cloud_href href(iter_item)
end

datasource "ds_clouds" do
  iterate @clouds
  field "name", val(iter_item,  "name")
  field "cloud_type", val(iter_item, "cloud_type")
  field "href", href(iter_item)
end

datasource "ds_addresses" do
  iterate @addresses
  field "href", href(iter_item)
  field "name", val(iter_item,  "name")
  field "address", val(iter_item, "address")
  field "ip_address_bindings_href", jmes_path(iter_item, "links[?rel=='ip_address_bindings'].href | [0]")
end

datasource "ds_munged_addresses" do
  run_script $js_munge_addresses, $ds_addresses, $ds_clouds, rs_project_id, rs_cm_host, $param_whitelist
end

script "js_munge_addresses", type: "javascript" do
  parameters "ds_addresses","ds_clouds","rs_project_id", "rs_cm_host","param_whitelist"
  result "addresses"
  code <<-EOS
    var addresses = []
    var clouds = {};

    for (var index = 0; index < ds_clouds.length; index++) {
      var cloud = ds_clouds[index];
      clouds[cloud['href']] = {
        name: cloud['name'],
        type: cloud['cloud_type']
      };
    }

    for (var a = 0; a < ds_addresses.length; a++) {
      var address = ds_addresses[a]

      // get cloud_href
      var split = address['href'].split('/')
      var index = address['href'].indexOf('/' + split[4])
      var cloud_href = address['href'].substring(0,index)

      var attached = 'false'
      if (address['ip_address_bindings_href']){
        attached = 'true'
      }

      // exlcude white listed names
      // only show which addresses are not attached, no bindings
      if( param_whitelist.indexOf(address['address']) === -1 && attached === 'false' ){
        addresses.push({
          cloud_name: clouds[cloud_href]['name'],
          cloud_type: clouds[cloud_href]['type'],
          id: address['address'],
          name: address['name'],
          href: address['href'],
          attached: attached
        })
      }
    }

EOS
end

escalation "email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

escalation "report_description" do
  automatic contains($param_automatic_action, "Delete IP Addresses")
  label "Delete Addresses"
  description "Approval to delete all selected addresses"
  run "delete_unattached_addresses", data
end

resolution "report_resolution" do
  email $param_email
end

policy "unattached_ip_addresses" do
  validate $ds_munged_addresses do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Unattached IP Addresses"
    escalate $email
    escalate $report_description
    check eq(size(data),0)
    #check contains($param_whitelist,val(item, "id"))
    #check eq(val(item,'attached'),'true')
    resolve $report_resolution
    export do
      resource_level true
      field "id" do
        label "Address"
      end
      field "cloud_name" do
        label "Cloud Name"
      end
      field "cloud_type" do
        label "Cloud Type"
      end
      field "name" do
        label "Address Name"
      end
      field "attached" do
        label "Attached"
      end
      field "href" do
        label "HREF"
      end
    end
  end
end

define delete_unattached_addresses($data) do
  foreach $item in $data do
    @ip_address = rs_cm.get(href: $item['href'])
    @ip_address.destroy()
    call sys_log('destroy' ,to_s($item))
  end
end

define sys_log($subject, $detail) do
  rs_cm.audit_entries.create(
    notify: "None",
    audit_entry: {
      auditee_href: @@account,
      summary: "Unattached IP Address: "+$subject,
      detail: $detail
    }
  )
end
