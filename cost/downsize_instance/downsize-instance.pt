name "Downsize Instances"
rs_pt_ver 20180301
type "policy"
short_description "A policy that downsizes instances. \n See the [README](https://github.com/rightscale/policy_templates/tree/master/cost/downsize_instance) and [docs.rightscale.com/policies](http://docs.rightscale.com/policies/) to learn more."
long_description "Version: 1.12"
severity "medium"
category "Cost"

permission "perm_instances" do
  label "Permissions for instances"
  actions "rs_cm.index", "rs_cm.show"
  resources "rs_cm.instances", "rs_cm.clouds", "rs_cm.instance_types"
end

parameter "param_instance_tag_list" do
  type "list"
  label "Tags to find with instances"
  description "Instance tags used to filter instances that must validate policy. (e.g.: rs_monitoring:resize=1)"
  min_length 1
  allowed_pattern /([\w]?)+\:([\w]?)+\=([\w]?)+/
end

parameter "param_email" do
  type "list"
  label "Email List"
  description "Email addresses of the recipients you wish to notify"
end

parameter "param_exclude_tags" do
  type "list"
  label "Tags to ignore instances"
  description "List of tags that will exclude instances from being evaluated by this policy. Multiple tags are evaluated as an 'OR' condition. Tag keys or key/value pairs can be listed. Example: 'test,env=dev'"
end

parameter "param_cooldown_days" do
  type "number"
  label "Cooldown Days"
  description "Days to cooldown between checks of same instance"
  default 30
end

auth "auth_rs", type: "rightscale"

resources "clouds", type: "rs_cm.clouds" do
  filter do # ignore clouds that are NOT represented in instance_types.json
    cloud_type ne: ["vscale", "soft_layer", "cloud_stack", "rackspace_next_gen", "blue_skies","open_stack_v2","uca","open_stack_v3"]
  end
end

resources "instances", type: "rs_cm.instances" do
  iterate @clouds
  cloud_href href(iter_item)
  filter do
    state "operational"
  end
  tags all(any($param_instance_tag_list),none("rs_downsize:cooldown=*",$param_exclude_tags))
end

resources "instance_types", type: "rs_cm.instance_types" do
  iterate @clouds
  cloud_href href(iter_item)
end

datasource "ds_instance_type_memory", type: "javascript" do
  run_script $js_instance_type_memory, @instance_types
end

script "js_instance_type_memory", type: "javascript" do
  parameters "instance_types"
  result "instance_type_memory_mapping"
  code <<-EOS
  var instance_type_memory_mapping = {};
  var mb_bytes = 1000000
  var gb_bytes = 1000000000
for (m = 0; m < instance_types.length; m++) {
  instance_type_name = instance_types[m]["name"]
  instance_type_memory = instance_types[m]["memory"]
  if (instance_type_memory.match(/GB/)) {
    mem_gb = Number(instance_type_memory.split("GB")[0])
    mem = mem_gb * gb_bytes
  } else if (instance_type_memory.match(/MB/)) {
    mem_mb = Number(instance_type_memory.split("MB")[0])
    mem = mem_mb * mb_bytes
  } else { // assume MB without the units
    mem_mb = Number(instance_type_memory)
    mem = mem_mb * mb_bytes
  }
  instance_type_memory_mapping[instance_type_name] = mem
};
EOS
end

datasource "ds_instances" do
  iterate @instances
  field "resource_uid", val(iter_item,  "resource_uid")
  field "name", val(iter_item, "name")
  field "href", href(iter_item)
  field "instance_type", val(iter_item, "instance_type")
end

datasource "ds_instances_16" do
  iterate(@clouds)
  request do
    auth $auth_rs
    verb "GET"
    host rs_cm_host
    path join([href(iter_item), "/instances"])
    header "X-Api-Version", "1.6"
    header "X-Account", to_s(rs_project_id)
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "href", jmes_path(col_item, "href")
      field "name", jmes_path(col_item,"name")
      field "description", jmes_path(col_item, "description")
      field "legacy_id", to_n(jmes_path(col_item,"legacy_id"))
      field "instance_type", jmes_path(col_item, "links.instance_type.name")
      field "region", jmes_path(col_item, "links.cloud.region")
      field "cloud_type", jmes_path(col_item, "links.cloud.cloud_type")
    end
  end
end

datasource "ds_instance_size_map" do
  request do
    verb "GET"
    host "raw.githubusercontent.com"
    path "/rightscale/policy_templates/master/data/aws/instance_types.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_filtered_instances" do
  run_script $js_filter_instances, $ds_instances, $ds_instances_16, $ds_instance_size_map
end

script "js_filter_instances", type: "javascript" do
  parameters "instances", "instances16", "instance_size_map"
  result "filtered_instances"
  code <<-EOS
// This is the list of filtered instances.
var filtered_instances = [];
var i_type = {};
for ( n = 0; n < instances16.length; n++) {
  i_type[instances16[n]["href"]] = {
    cloud_type: instances16[n]["cloud_type"],
    instance_type: instances16[n]["instance_type"],
    legacy_id: instances16[n]["legacy_id"],
    region: instances16[n]["region"]
  }
}

for ( i = 0; i < instances.length; i++ ) {
  var cloud_type = i_type[instances[i]["href"]]["cloud_type"]
  var instance_type = i_type[instances[i]["href"]]["instance_type"]
  var legacy_id = i_type[instances[i]["href"]]["legacy_id"]
  var region = i_type[instances[i]["href"]]["region"]
  var next_instance_size = instance_size_map["clouds"][cloud_type.toString()][instance_type.toString()]["down"]
  if (!next_instance_size) { next_instance_size = "N/A" }
  filtered_instances.push(
    {
      resource_uid: instances[i]["resource_uid"],
      name: instances[i]["name"],
      href: instances[i]["href"],
      description: instances[i]["description"],
      legacy_id: legacy_id,
      instance_type: instance_type,
      region: region,
      cloud_type: cloud_type,
      next_instance_size: next_instance_size
    }
  )
};
EOS
end

resolution "report_downsize_instances_resolution" do
  email $param_email
end

escalation "report_downsize_instances" do
  email $param_email
end

escalation "downsize_instances" do
  run "downsize_instances", data, $param_instance_tag_list, $param_cooldown_days
end


define downsize_instances($data,$param_instance_tag_list,$param_cooldown_days) do
  foreach $item in $data do
    @current_instance = rs_cm.instances.empty()
    if $item["next_instance_size"] != "N/A"
      @instance = rs_cm.get(href: $item["href"])
      @current_server = @instance.parent()
      task_label("stopping instance")
      @instance.stop()
      task_label("sleeping until instance stopped")
      sleep_until(@current_server.state == 'provisioned')
      @current_instance = @current_server.current_instance()
      @cloud = @current_instance.cloud()
      @new_instance_type = first(@cloud.instance_types(filter: ["name=="+$item["next_instance_size"]]))
      @current_instance.update(instance: { instance_type_href: @new_instance_type.href })
      task_label("sleeping until instance started")
      @current_instance.start()
      sleep_until(@current_instance.state == 'operational')
      task_label("Instance Started")
      $date = now() + (60*60*24)*$param_cooldown_days
      $format_string = "%Y/%m/%d %H:%M:%S"
      $formatted_time = strftime($date, $format_string)
      task_label("Adding CoolDown Tag")
      rs_cm.tags.multi_add(resource_hrefs: [@current_instance.href], tags: ["rs_downsize:cooldown="+$formatted_time])
    end
    if empty?(@current_instance)
      @current_instance = rs_cm.get(href: $item["href"])
    end
    $excluded_tags = ["ec2:Name=","rs_agent:mime_shellscript","rs_agent:type","rs_login:state","rs_monitoring:state","rs_monitoring:util"]
    $ok_tags = []
    foreach $tag in $param_instance_tag_list do
      if !contains?($excluded_tags,[$tag])
        $ok_tags<<$tag
      end
    end
    if size($ok_tags) > 0
      task_label("Deleting Tags")
      rs_cm.tags.multi_delete(resource_hrefs: [@current_instance.href], tags: $ok_tags)
    end
  end
end

policy "policy_rightsize" do
  validate $ds_filtered_instances do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Instances that can be downsized"
    detail_template <<-EOS
# {{ len data }} Instances can be downsized

| Instance Name | Resource UID | Current Instance Type | New Instance Type | Href
| ------------- | ------------ | --------------------- | ----------------- | ----------------- |
{{ range data -}}
  | {{.name}} | {{.resource_uid}} | {{.instance_type}} | {{.next_instance_size}} | {{.href}}
{{ end -}}

EOS
    escalate $report_downsize_instances
    escalate $downsize_instances
    resolve $report_downsize_instances_resolution
    check eq(size(data),0)
  end
end
