name "Reserved Instances Coverage"
rs_pt_ver 20180301
type "policy"
short_description "A policy that sends email notifications on reserved instance coverage. See the [README](https://github.com/rightscale/policy_templates/tree/master/cost/aws/reserved_instances/coverage) and [docs.rightscale.com/policies](http://docs.rightscale.com/policies/) to learn more."
long_description "Version: 1.0"
severity "medium"
category "Cost"

##################
# User inputs    #
##################

parameter "param_email" do
  label "Email addresses of the recipients you wish to notify"
  type "list"
end

parameter "param_historical_number_of_days_in_past" do
  type "string"
  label "Number of days in the past to view Reserved Instance Coverage"
  allowed_values "7","14","30","90","180","365"
  default "7"
end

auth "aws", type: "aws" do
  version "4"
  service "ce"
  region "us-east-1"
  access_key cred("AWS_ACCESS_KEY_ID")
  secret_key cred("AWS_SECRET_ACCESS_KEY")
end

# Creating the end_date generally setting it to right now 
# Expected Result: "2018-05-29"
# Creating the start_date.
# We are converting param_historical_number_of_days_in_past from string to a number.
# daysToMove has to be negative
# Expected result example: "2018-04-29" 
script "aws_reserved_instance_coverage_request", type: "javascript" do
  parameters "param_number_of_days_in_past"
  result "results"
  code <<-EOS
  var end_date = new Date();
  var start_date = new Date();
  var daysToMove = parseInt(param_number_of_days_in_past,10);
  start_date.setDate(end_date.getDate() - daysToMove);
  var end_dates = end_date.toISOString().slice(0, 10);
  var start_dates = start_date.toISOString().slice(0, 10);
  results = {
     auth: "aws",
     host: 'ce.us-east-1.amazonaws.com',
     path: '/',
     verb: 'POST',
     headers: {
      "X-Amz-Target": "AWSInsightsIndexService.GetReservationCoverage",
      "Content-Type": "application/x-amz-json-1.1",
     },
     body_fields: {
      "TimePeriod": 
       {
      "Start": start_dates,
      "End": end_dates,
       }
      },
    
  }
  EOS
end

# https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-explorer-api.html
datasource "ds_reservations_coverage" do
  request do
    run_script $aws_reserved_instance_coverage_request, $param_historical_number_of_days_in_past
  end
  result do
    encoding "json"
    field "total_coverage_hours_percentage", jmes_path(response, "Total.CoverageHours.CoverageHoursPercentage")
    field "total_on_demand_hours", jmes_path(response, "Total.CoverageHours.OnDemandHours")
    field "total_reserved_hours", jmes_path(response, "Total.CoverageHours.ReservedHours")
    field "total_running_hours",  jmes_path(response, "Total.CoverageHours.TotalRunningHours")
    field "timeperiod_start_time", jmes_path(response,"CoveragesByTime[0].TimePeriod.Start")
    field "timeperiod_end_time", jmes_path(response,"CoveragesByTime[0].TimePeriod.End")
  end
end

escalation "alert" do
  email $param_email
end

policy "pol_ri_coverage" do
  validate $ds_reservations_coverage do
    summary_template "Reserved Instances Coverage."
    detail_template <<-EOS
# Reserved Instance Coverage

| Organization Name | CoverageHoursPercentage | OnDemandHours | ReservedHours | TotalRunningHours | TimePeriod_StartDate | TimePeriod_EndDate |
| ----------------- | ----------------------- | ------------- | ------------- | ----------------- | ---------- | -------- |
| {{rs_org_name}} | {{ data.total_coverage_hours_percentage }} | {{ data.total_on_demand_hours }} | {{ data.total_reserved_hours }} | {{ data.total_running_hours }} | {{data.timeperiod_start_time}} | {{data.timeperiod_end_time }} |
EOS

  escalate $alert
  check gt(0,0)
  end
end
