name "AWS Savings Plan Utilization"
rs_pt_ver 20180301
type "policy"
short_description "A policy that sends email notifications when utilization falls below a threshold. See the [README](https://github.com/rightscale/policy_templates/tree/master/cost/aws/reserved_instances/utilization) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "high"
category "Cost"
tenancy "single"
default_frequency "daily"
info(
  version: "2.0",
  provider: "Flexera Optima",
  service: "",
  policy_set: ""
)

##############################################################################
# Parameters
##############################################################################

parameter "param_days" do
  category "Savings Plan"
  label "Look Back Period"
  default "Last 7 Days"
  description "Number of days of prior usage to analyze"
  allowed_values "Last 7 Days","Last 30 Days","Last 60 Days"
  type "string"
end

parameter "param_aws_account_number" do
  type "string"
  label "Account Number"
  description "The account number for AWS STS Cross Account Roles."
  default ""
end

parameter "param_scope" do
  category "Savings Plan"
  label "Account Scope"
  description "The account scope that you want your recommendations for"
  allowed_values "Payer","Linked"
  default "Payer"
  type "string"
end

parameter "param_savings_plan_type" do
  category "Savings Plan"
  label "Savings Plan Type"
  default "Compute Savings Plan"
  allowed_values "Compute Savings Plan","EC2 Instance Savings Plan"
  type "string"
end

parameter "param_savings_threshold" do
  category "Savings Plan"
  label "Monthly Savings Threshold"
  description "Specify the minimum estimated monthly savings that should result in a recommendation"
  default 100
  type "number"
end

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify"
end

parameter "param_currency_adjustment" do
  label "Currency Adjustment"
  description "adjusts recommendation savings based on USD conversion rate where USD is 100%"
  default 1.00
  max_value 5.00
  type "number"
end

###############################################################################
# Authentication
###############################################################################

#Authenticate with AWS
credentials "auth_aws" do
  schemes "aws","aws_sts"
  label "AWS"
  description "Select the AWS Credential from the list"
  tags "provider=aws"
  aws_account_number $param_aws_account_number
end

pagination "aws_pagination" do
  get_page_marker do
    body_path "NextPageToken"
  end
  set_page_marker do
    body_field "NextPageToken"
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_sp_recommendations" do
  request do
    run_script $js_sp_request, $param_days, $param_payment_option, $param_term, $param_savings_plan_type, $param_scope
  end
  result do
    encoding "json"
    collect jmes_path(response, "SavingsPlansUtilization.GetSavingsPlansUtilizationDetails[*]") do
      field "amortizedRecurringCommitment", jmes_path(col_item, "AmortizedCommitment.AmortizedRecurringCommitment")
      field "amortizedUpfrontCommitment", jmes_path(col_item, "AmortizedCommitment.AmortizedUpfrontCommitment")
      field "totalAmortizedCommitment", jmes_path(col_item, "AmortizedCommitment.TotalAmortizedCommitment")
      field "attributes", jmes_path(col_item, "Attributes")
      field "netSavings", jmes_path(col_item, "Savings.NetSavings")
      field "onDemandCostEquivalent", jmes_path(col_item, "Savings.OnDemandCostEquivalent")
      field "savingsPlanArn", jmes_path(col_item, "SavingsPlanArn")
      field "utilizationTotalCommitment" jmes_path(col_item, "Utilization.TotalCommitment")
      field "utilizationUnusedCommitment" jmes_path(col_item, "Utilization.UnusedCommitment")
      field "utilizationUsedCommitment" jmes_path(col_item, "Utilization.UsedCommitment")
      field "utilizationPercentage" jmes_path(col_item, "Utilization.UtilizationPercentage")
    end
  end
end

datasource "ds_reservations_rounded" do
  run_script $js_round_utilization, $ds_reservations
end

###############################################################################
# Scripts
###############################################################################

script "js_sp_request", type: "javascript" do
  parameters "param_days","param_payment_option","param_term","param_savings_plan_type", "param_scope"
  result "request"
  code <<-EOS

    var period = {
      "Last 7 Days":"SEVEN_DAYS",
      "Last 30 Days":"THIRTY_DAYS",
      "Last 60 Days":"SIXTY_DAYS"
    }

    var term = {
      "1 Year":"ONE_YEAR",
      "3 Year":"THREE_YEARS"
    }

    var scope = {
      "Payer":"PAYER",
      "Linked":"LINKED"
    }

    var plan = {
      "Compute Savings Plan":"COMPUTE_SP",
      "EC2 Instance Savings Plan":"EC2_INSTANCE_SP"
    }

    var payload = {}
    payload['TimePeriod'] = period[param_days]
    payload['AccountScope'] = scope[param_scope]
    payload['SavingsPlansType'] = plan[param_savings_plan_type]

    var request = {
      auth: "auth_aws",
      pagination: "aws_pagination",
      host: "ce.us-east-1.amazonaws.com",
      path: '/',
      verb: 'POST',
      body_fields: payload,
      headers: {
        "User-Agent": "RS Policies",
        "X-Amz-Target": "AWSInsightsIndexService.GetSavingsPlansUtilizationDetails",
        "Content-Type": "application/x-amz-json-1.1",
      }
    }
  EOS
end

script "js_round_utilization", type: "javascript" do
  parameters "reservations"
  result "modified_reservations"
  code <<-EOS
  // This is the list of filtered volumes.
  var modified_reservations = [];
  for (var i = 0; i < reservations.length; i++) {
    modified_reservations.push(
      {
        utilization_percentage: Math.round(parseFloat(reservations[i]["utilization_percentage"])),
        end_datetime: reservations[i]["end_datetime"],
        start_datetime: reservations[i]["start_datetime"],
        account_name: reservations[i]["account_name"],
        account_id: reservations[i]["account_id"],
        region: reservations[i]["region"],
        instance_type: reservations[i]["instance_type"],
        instance_count: reservations[i]["instance_count"],
        scope: reservations[i]["scope"],
        type: reservations[i]["type"],
      }
    )
  }
  modified_reservations = _.sortBy(modified_reservations, 'region');
EOS
end

###############################################################################
# Policy
##############################################################################

policy "ri_utilization" do
  validate_each $ds_reservations_rounded do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): Reserved Instance Utilization"
    escalate $report_reserved_instances_utilization
    check gt(to_n(val(item,"utilization_percentage")),$param_utilization)
    export do
      resource_level true
      field "region" do
        label "Region"
      end
      field "account_name" do
        label "Account Name"
      end
      field "id" do
        label "Account Id"
        path "account_id"
      end
      field "scope" do
        label "Scope"
      end
      field "type" do
        label "Type"
      end
      field "instance_type" do
        label "Instance Type"
      end
      field "instance_count" do
        label "Instance Count"
      end
      field "utilization_percentage" do
        label "Utilization Percentage"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "report_reserved_instances_utilization" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end

###############################################################################
# Cloud Workflow
###############################################################################
