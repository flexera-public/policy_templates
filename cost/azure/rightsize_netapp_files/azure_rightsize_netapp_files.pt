name "Azure Rightsize NetApp Files"
rs_pt_ver 20180301
type "policy"
short_description "Cheks for oversized NetApp Volumes and suggest recommendations to save money. See the [README](https://github.com/flexera-public/policy_templates/tree/master/cost/azure/rightsize_netapp_files/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
category "Cost"
severity "low"
default_frequency "weekly"
info(
  version: "0.0",
  provider: "Azure",
  service: "NetApp Files",
  policy_set: "Rightsize NetApp Files",
  recommendation_type: "Usage Reduction"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email Addresses"
  description "A list of email addresses to notify."
  default []
end

parameter "param_azure_endpoint" do
  type "string"
  category "Policy Settings"
  label "Azure Endpoint"
  description "Select the API endpoint to use for Azure. Use default value of management.azure.com unless using Azure China."
  allowed_values "management.azure.com", "management.chinacloudapi.cn"
  default "management.azure.com"
end

parameter "param_stats_underutil_threshold_pool_value" do
  type "number"
  category "Statistics"
  label "Underutilized NetApp Files Capacity Pool Threshold (%)"
  description "The NetApp Files threshold at which to consider a capacity pool to be 'underutilized' and therefore be flagged for downsizing. Set to -1 to ignore capacity pool utilization"
  min_value -1
  max_value 100
  default 40
end

parameter "param_stats_underutil_threshold_volume_value" do
  type "number"
  category "Statistics"
  label "Underutilized NetApp Files Volume Threshold (%)"
  description "The NetApp Files threshold at which to consider a volume to be 'underutilized' and therefore be flagged for downsizing. Set to -1 to ignore volume utilization"
  min_value -1
  max_value 100
  default 40
end

parameter "param_subscriptions_allow_or_deny" do
  type "string"
  category "Filters"
  label "Allow/Deny Subscriptions"
  description "Allow or Deny entered Subscriptions"
  allowed_values "Allow", "Deny"
  default "Allow"
end

parameter "param_subscriptions_list" do
  type "list"
  category "Filters"
  label "Allow/Deny Subscriptions List"
  description "A list of allowed or denied Subscription IDs/names"
  default []
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_azure" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential from the list."
  tags "provider=azure_rm"
end

###############################################################################
# Pagination
###############################################################################

pagination "pagination_azure" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources & Scripts
###############################################################################

datasource "ds_azure_subscriptions" do
  request do
    auth $auth_azure
    pagination $pagination_azure
    host $param_azure_endpoint
    path "/subscriptions/"
    query "api-version","2020-01-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item, "subscriptionId")
      field "name", jmes_path(col_item, "displayName")
      field "state", jmes_path(col_item, "state")
    end
  end
end

datasource "ds_azure_subscriptions_filtered" do
  run_script $js_azure_subscriptions_filtered, $ds_azure_subscriptions, $param_subscriptions_allow_or_deny, $param_subscriptions_list
end

script "js_azure_subscriptions_filtered", type: "javascript" do
  parameters "ds_azure_subscriptions", "param_subscriptions_allow_or_deny", "param_subscriptions_list"
  result "result"
  code <<-EOS
  if (param_subscriptions_list.length > 0) {
    result = _.filter(ds_azure_subscriptions, function(subscription) {
      include_subscription = _.contains(param_subscriptions_list, subscription['id']) || _.contains(param_subscriptions_list, subscription['name'])

      if (param_subscriptions_allow_or_deny == "Deny") {
        include_subscription = !include_subscription
      }

      return include_subscription
    })
  } else {
    result = ds_azure_subscriptions
  }
EOS
end

datasource "ds_resource_groups" do
  iterate $ds_azure_subscriptions_filtered
  request do
    auth $auth_azure
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item, "id"), "/resourceGroups"])
    query "api-version", "2020-09-01"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscription_id", val(iter_item, "id")
      field "resource_group_name", jmes_path(col_item, "name")
    end
  end
end

datasource "ds_naf_accounts" do
  iterate $ds_resource_groups
  request do
    auth $auth_azure
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item, "subscription_id"), "/resourceGroups/", val(iter_item, "resource_group_name"), "/providers/Microsoft.NetApp/netAppAccounts"])
    query "api-version", "2023-05-01"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscription_id", jmes_path(iter_item, "subscription_id")
      field "resource_group_name", jmes_path(iter_item, "resource_group_name")
      field "naf_account_name", jmes_path(col_item, "name")
    end
  end
end

datasource "ds_naf_capacity_pools_v1" do
  iterate $ds_naf_accounts
  request do
    auth $auth_azure
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item, "subscription_id"), "/resourceGroups/", val(iter_item, "resource_group_name"), "/providers/Microsoft.NetApp/netAppAccounts/", val(iter_item, "naf_account_name"), "/capacityPools"])
    query "api-version", "2023-05-01"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscription_id", jmes_path(iter_item, "subscription_id")
      field "resource_group_name", jmes_path(iter_item, "resource_group_name")
      field "naf_account_name", jmes_path(iter_item, "naf_account_name")
      field "naf_pool_id", jmes_path(col_item, "id")
      field "naf_pool_name", jmes_path(col_item, "name")
      field "naf_pool_size", jmes_path(col_item, "properties.size")
    end
  end
end

datasource "ds_naf_capacity_pools_v2" do
  run_script $js_naf_capacity_pools_v2, $ds_naf_capacity_pools_v1
end

script "js_naf_capacity_pools_v2", type: "javascript" do
  parameters "ds_naf_capacity_pools_v1"
  result "result"
  code <<-EOS
  var result = _.map(ds_naf_capacity_pools_v1, function(item) {
    item.naf_pool_name = item.naf_pool_name.split("/")[1]
    return item
  })
EOS
end

datasource "ds_naf_pool_metrics" do
  iterate $ds_naf_capacity_pools_v2
  request do
    auth $auth_azure
    host $param_azure_endpoint
    path join([val(iter_item, "naf_pool_id"), "/providers/Microsoft.Insights/metrics"])
    query "api-version", "2018-01-01"
    query "metricnames", "VolumePoolAllocatedUsed,VolumePoolAllocatedSize"
  end
  result do
    encoding "json"
    field "subscription_id", jmes_path(iter_item, "subscription_id")
    field "resource_group_name", jmes_path(iter_item, "resource_group_name")
    field "naf_account_name", jmes_path(iter_item, "naf_account_name")
    field "naf_pool_id", jmes_path(iter_item, "naf_pool_id")
    field "naf_pool_name", jmes_path(iter_item, "naf_pool_name")
    field "naf_pool_size", jmes_path(iter_item, "naf_pool_size")
    field "naf_pool_metrics", jmes_path(response, "value[*]")
  end
end

datasource "ds_naf_volumes" do
  iterate $ds_naf_capacity_pools_v2
  request do
    auth $auth_azure
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item, "subscription_id"), "/resourceGroups/", val(iter_item, "resource_group_name"), "/providers/Microsoft.NetApp/netAppAccounts/", val(iter_item, "naf_account_name"), "/capacityPools/", val(iter_item, "naf_pool_name"), "/volumes"])
    query "api-version", "2023-05-01"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscription_id", jmes_path(iter_item, "subscription_id")
      field "resource_group_name", jmes_path(iter_item, "resource_group_name")
      field "naf_account_name", jmes_path(iter_item, "naf_account_name")
      field "naf_pool_id", jmes_path(iter_item, "naf_pool_id")
      field "naf_pool_name", jmes_path(iter_item, "naf_pool_name")
      field "naf_pool_size", jmes_path(iter_item, "naf_pool_size")
      field "naf_volume_name", jmes_path(col_item, "name")
      field "naf_volume_id", jmes_path(col_item, "id")
    end
  end
end

datasource "ds_naf_volume_metrics" do
  iterate $ds_naf_volumes
  request do
    auth $auth_azure
    host $param_azure_endpoint
    path join([val(iter_item, "naf_volume_id"), "/providers/Microsoft.Insights/metrics"])
    query "api-version", "2018-01-01"
    query "metricnames", "VolumeLogicalSize,VolumeAllocatedSize,VolumeConsumedSizePercentage"
  end
  result do
    encoding "json"
    field "subscription_id", jmes_path(iter_item, "subscription_id")
    field "resource_group_name", jmes_path(iter_item, "resource_group_name")
    field "naf_account_name", jmes_path(iter_item, "naf_account_name")
    field "naf_pool_id", jmes_path(iter_item, "naf_pool_id")
    field "naf_pool_name", jmes_path(iter_item, "naf_pool_name")
    field "naf_pool_size", jmes_path(iter_item, "naf_pool_size")
    field "naf_volume_name", jmes_path(iter_item, "naf_volume_name")
    field "naf_volume_id", jmes_path(iter_item, "naf_volume_id")
    field "naf_volume_metrics", jmes_path(response, "value[*]")
  end
end

datasource "ds_naf_oversized_pools" do
  run_script $js_naf_oversized_pools, $ds_naf_pool_metrics
end

script "js_naf_oversized_pools", type: "javascript" do
  parameters "ds_naf_pool_metrics"
  result "result"
  code <<-EOS
  result = []
  function bytesToGibibytes(bytes) {
    return Math.round(bytes * 9.3132257461548e-10)
  }
  _.each(ds_naf_pool_metrics, function(pool){
    _.each(pool.naf_pool_metrics, function (metric) {
      var lastPointInTS = metric.timeseries[0].data[metric.timeseries[0].data.length - 1].average
      switch (metric.name.value) {
        case "VolumePoolAllocatedUsed":
          pool.volumePoolAllocatedUsed = bytesToGibibytes(lastPointInTS)
          break;
        case "VolumePoolAllocatedSize":
          pool.volumePoolAllocatedSize = bytesToGibibytes(lastPointInTS)
          break;
      }
    })
    // Check if capacity pool contains required metrics info
    if (pool.volumePoolAllocatedSize != undefined && pool.volumePoolAllocatedUsed != undefined) {
      // Minimum pool size is 2 TiB (2048 GiB). If is not greater than that value, it cannot be downsized.
      if (pool.volumePoolAllocatedSize > 2048) {
        var poolConsumedPercentage = Math.round(pool.volumePoolAllocatedUsed * 100 / pool.volumePoolAllocatedSize)
        if (poolConsumedPercentage < param_stats_underutil_threshold_pool_value) {
          var poolRecommendedSize = Math.round(pool.volumePoolAllocatedUsed * 100 / param_stats_underutil_threshold_pool_value)
          if (poolRecommendedSize < 2048) {
            poolRecommendedSize = 2048
          }
          result.push({
            resourceID: pool['naf_pool_id'],
            resourceName: pool['naf_pool_name'],
            poolSize: pool['volumePoolAllocatedSize'],
            poolUsed: pool['volumePoolAllocatedUsed'],
            poolConsumedPercentage: poolConsumedPercentage,
            poolRecommendedSize: poolRecommendedSize,
            id: pool['naf_pool_id']
          })
        }
      }
    }
  })
EOS
end

datasource "ds_naf_oversized_volumes" do
  run_script $js_naf_oversized_volumes, $ds_naf_volume_metrics
end

script "js_naf_oversized_volumes", type: "javascript" do
  parameters "ds_naf_volume_metrics"
  result "result"
  code <<-EOS
  result = []
  function bytesToGibibytes(bytes) {
    return Math.round(bytes * 9.3132257461548e-10)
  }
  _.each(ds_naf_volume_metrics, function(volume) {
    // Minimum capacity pool size is 2 TiB. If equals to that size, volume is skipped since it cannot be downsized.
    if (bytesToGibibytes(volume.naf_pool_size) == 2048) {
      return
    }
    _.each(volume.naf_volume_metrics, function(metric) {
      var lastPointInTS = metric.timeseries[0].data[metric.timeseries[0].data.length - 1].average
      switch (metric.name.value) {
        case "VolumeLogicalSize":
          volume.volume_logical_size = bytesToGibibytes(lastPointInTS)
          break;
        case "VolumeAllocatedSize":
          volume.volume_allocated_size = bytesToGibibytes(lastPointInTS)
          break;
        case "VolumeConsumedSizePercentage":
          volume.volume_consumed_size_percentage = Math.round(lastPointInTS)
          break;
      }
    })
    // Check if volume contains required metrics info
    if (volume.volume_logical_size != undefined && volume.volume_allocated_size != undefined && volume.volume_consumed_size_percentage != undefined) {
      // Minimum volume size is 100 GiB. If equals to 100, cannot be downsized.
      if (volume.volume_allocated_size > 100) {
        // Logical volume size should be less than the volume threshold of volume allocated size to show recommendations
        if (volume.volume_consumed_size_percentage < param_stats_underutil_threshold_volume_value) {
          // If recommended allocated size for volume is less than 100, recommendation will be 100 because of minimum size
          var recommendedVolumeAllocatedSize = volume.volume_logical_size * 100 / param_stats_underutil_threshold_volume_value
          if (recommendedVolumeAllocatedSize < 100) {
            recommendedVolumeAllocated = 100
          }
          var recommendedPoolSize = bytesToGibibytes(volume.naf_pool_size) - (volume.volume_allocated_size - recommendedVolumeAllocatedSize)
          // If recommended pool size is less than 2 TiB, recommendation will be 2 TiB because of minimum pool size
          if (recommendedPoolSize < 2048) {
            recommendedPoolSize = 2048
          }
          result.push({
            resourceID: volume['naf_volume_id'],
            resourceName: volume['naf_volume_name'],
            volumeAllocatedSize: volume['volume_allocated_size'],
            volumeLogicalSize: volume['volume_logical_size'],
            volumeConsumedSizePercentage: volume['volume_consumed_size_percentage'],
            recommendedVolumeAllocatedSize: recommendedVolumeAllocatedSize,
            poolName: volume['naf_pool_name'],
            poolSize: bytesToGibibytes(volume['naf_pool_size']),
            recommendedPoolSize: recommendedPoolSize,
            id: volume['naf_volume_id'],
          })
        }
      }
    }
  })
EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_azure_rightsize_netapp_files" do
  validate $ds_naf_oversized_pools do
    summary_template "There are {{ len data }} oversized Azure NetApp File Pools"
    check eq(size(data), 0)
    escalate $esc_email
    export do
      resource_level true
      field "resourceID" do
        label "Resource ID"
      end
      field "resourceName" do
        label "Resource Name"
      end
      field "poolSize" do
        label "Capacity Pool Size (GiB)"
      end
      field "poolUsed" do
        label "Capacity Pool Used (GiB)"
      end
      field "poolConsumedPercentage" do
        label "Capacity Pool Consumed Percentage (%)"
      end
      field "poolRecommendedSize" do
        label "Capacity Pool Recommended Size (GiB)"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "id" do
        label "ID"
      end
    end
  end
  validate $ds_naf_oversized_volumes do
    summary_template "There are {{ len data }} oversized Azure NetApp File Volumes"
    check eq(size(data), 0)
    escalate $esc_email
    export do
      resource_level true
      field "resourceID" do
        label "Resource ID"
      end
      field "resourceName" do
        label "Resource Name"
      end
      field "volumeAllocatedSize" do
        label "Volume Allocated Size (GiB)"
      end
      field "volumeLogicalSize" do
        label "Volume Logical Size (GiB)"
      end
      field "volumeConsumedSizePercentage" do
        label "Volume Consumed Size Percentage (%)"
      end
      field "recommendedVolumeAllocatedSize" do
        label "Volume Recommended Allocated Size (GiB)"
      end
      field "poolName" do
        label "Capacity Pool Name"
      end
      field "poolSize" do
        label "Capacity Pool Size (GiB)"
      end
      field "recommendedPoolSize" do
        label "Capacity Pool Recommended Size (GiB)"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "id" do
        label "ID"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email."
  email $param_email
end

###############################################################################
# Cloud Workflow
###############################################################################
