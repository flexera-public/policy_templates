name "Azure China Common Bill Ingestion"
rs_pt_ver 20180301
type "policy"
short_description "Azure China CBI Policy. See the [README](https://github.com/flexera-public/policy_templates/tree/master/cost/azure/azure_china_cbi/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "low"
category "Cost"
default_frequency "daily"
info(
  version: "1.0",
  provider: "Azure China",
  service: "N/A",
  policy_set: "Common Bill Ingest"
)

###############################################################################
# Parameters
###############################################################################

# Need to read the Azure EA key from credentials
permission "perm_read_creds" do
  actions   "rs_cm.show_sensitive","rs_cm.index_sensitive"
  resources "rs_cm.credentials"
end

# Could maybe get this from the EA key, but for now just ask for it
parameter "param_enrollment" do
  type "string"
  label "Azure Enrollment ID"
  description "Your Azure EA Enrollment ID from Azure China Billing Portal"
  allowed_pattern /V[0-9]{7}S[0-9]{4}/
end

parameter "param_bill_connect_id" do
  type "string"
  label "Bill Connect ID"
  description "Bill Connect ID created in CBI API. Example: cbi-oi-azure-china-*"
  allowed_pattern /cbi-oi-azure-china-[a-zA-Z0-9]*/
end

parameter "param_email" do
  type "list"
  label "Email addresses"
  description "A list of email addresses to notify"
end

###############################################################################
# Authentication
###############################################################################

#AUTHENTICATE WITH AZURE
credentials "azure_ea_auth" do
  schemes "api_key"
  label "Azure"
  description "Select the Azure China EA Credential from the list"
  tags "provider=azure_ea_china"
end

#AUTHENTICATE WITH FLEXERA/OPTIMA
credentials "auth_rs" do
  schemes "oauth2"
  label "flexera"
  description "Select FlexeraOne OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Datasources and Scripts
###############################################################################

#GET BILLING PERIOD
datasource "ds_billing_period" do
  run_script $js_get_billing_period
end

script "js_get_billing_period", type: "javascript" do
  result "result"
  code <<-EOS
  var current_bill_date = new Date()
  current_bill_date.setDate(current_bill_date.getDate() - 2)
  var billing_period = current_bill_date.toISOString().split("-")[0] + "-" + current_bill_date.toISOString().split("-")[1]
  
  var result = { 
    "billing_period": billing_period
  }
  EOS
end

#GET USAGE REPORT FOR AZURE CHINA
datasource "ds_usage_data" do
  request do
    auth $azure_ea_auth
    host "ea.azure.cn"
    path join(["/rest/", $param_enrollment, "/usage-report"])
    query "month", val($ds_billing_period, "billing_period")
    query "type", "detail"
    query "fmt", "csv"
    header "User-Agent", "RS Policies"
    header "api-version", "2014-09-02"
  end
  result do
    encoding "text"
  end
end

#CREATE BILL UPLOAD
datasource "ds_bill_upload" do
  request do
    auth $auth_rs
    verb "POST"
    host rs_optima_host
    path join(["/optima/orgs/", rs_org_id, "/billUploads"])
    header "User-Agent", "RS-Policies"
    header "allow_redirects", "False"
    body_field "billConnectId", $param_bill_connect_id
    body_field "billingPeriod", val($ds_billing_period, "billing_period")
  end
end

#PROCESS COST AND USAGE DATA INTO CSV FORMAT
#CREATE BILL UPLOAD FILE
datasource "ds_bill_upload_file" do
  request do
    run_script $create_bill_upload_file, $ds_usage_data, val($ds_bill_upload, "id"), $ds_billing_period, rs_org_id, rs_optima_host
  end
end

script "create_bill_upload_file", type: "javascript" do
  parameters "ds_usage_data", "bill_upload_id", "ds_billing_period_data", "org_id", "optima_host"
  result "request"
  code <<-EOS
    var request = {
      auth: "auth_rs",
      verb: "POST",
      host: optima_host,
      path: "/optima/orgs/" + org_id + "/billUploads/" + bill_upload_id + '/files/azure-china' + ds_billing_period_data.billing_period + '.csv',
      headers: {
        "User-Agent": "RS Policies",
      },
      body: ds_usage_data
    }
  EOS
end

#COMMIT UPLOAD
datasource "ds_bill_commit" do
  request do
    run_script $js_cbi_commit, $ds_bill_upload_file, val($ds_bill_upload, "id"), rs_org_id, rs_optima_host
  end
end

script "js_cbi_commit", type: "javascript" do
  parameters "bill_upload_file", "bill_upload_id", "org_id", "optima_host"
  result "request"
  code <<-EOS
    var request = {
      auth: "auth_rs",
      verb: "POST",
      host: optima_host,
      path: "/optima/orgs/" + org_id + "/billUploads/" + bill_upload_id + '/operations',
      headers: {
        "User-Agent": "RS Policies",
      },
      body_fields: { "operation": "commit" }
    }
  EOS
end

###############################################################################
# Policy
###############################################################################

policy "policy_azure_china_cbi_upload" do
  validate $ds_bill_commit do
    summary_template "Azure China CBI Bill Ingest"
    detail_template <<-EOS
Bill Uploaded
EOS
    escalate $email
    resolve $res_close_incident
    check eq(0,1)
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "email" do
  email $param_email
end

resolution "res_close_incident" do
  email $param_email
end
