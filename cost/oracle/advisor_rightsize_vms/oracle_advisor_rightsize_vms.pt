name "Oracle Cloud Advisor: Rightsize Virtual Machines"
rs_pt_ver 20180301
type "policy"
short_description "Reports Oracle Cloud Advisor recommendations for underutilized virtual machines. See the [README](https://github.com/flexera-public/policy_templates/tree/master/cost/oracle/advisor_rightsize_vms/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
doc_link "https://github.com/flexera-public/policy_templates/tree/master/cost/oracle/advisor_rightsize_vms/"
category "Cost"
severity "low"
default_frequency "weekly"
info(
  version: "0.1.0",
  provider: "Oracle",
  service: "Compute",
  policy_set: "Rightsize Compute Instances",
  recommendation_type: "Usage Reduction",
  hide_skip_approvals: "true"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email Addresses"
  description "A list of email addresses to notify."
  default []
end

parameter "param_min_savings" do
  type "number"
  category "Policy Settings"
  label "Minimum Savings Threshold"
  description "Minimum potential savings required to generate a recommendation"
  min_value 0
  default 0
end

parameter "param_root_compartment" do
  type "string"
  category "Policy Settings"
  label "Oracle Cloud Root Compartment OCID"
  description "The OCID of the Oracle Cloud root compartment."
  allowed_pattern /ocid1\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+\\.[a-z0-9]+/
  # No default value, user input required
end

parameter "param_primary_region" do
  type "string"
  category "Policy Settings"
  label "Primary Oracle Cloud Region"
  description "Primary Oracle Cloud region. Example: us-phoenix-1"
  min_length 1
  # No default value, user input required
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_oracle" do
  schemes "oracle"
  label "Oracle"
  description "Select the Oracle Cloud (OCI) Credential from the list."
  tags "provider=oracle"
end

credentials "auth_flexera" do
  schemes "oauth2"
  label "Flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Pagination
###############################################################################

pagination "pagination_oracle" do
  get_page_marker do
    body_path "nextStartWith"
  end
  set_page_marker do
    query "start"
  end
end

###############################################################################
# Datasources & Scripts
###############################################################################

# Get region-specific Flexera API endpoints
datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-'EOS'
  host_table = {
    "api.optima.flexeraeng.com": {
	    api: "api.flexera.com",
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com",
      grs: "grs-front.iam-us-east-1.flexeraeng.com",
      ui: "app.flexera.com",
      tld: "flexera.com"
    },
    "api.optima-eu.flexeraeng.com": {
	    api: "api.flexera.eu",
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com",
      grs: "grs-front.eu-central-1.iam-eu.flexeraeng.com",
      ui: "app.flexera.eu",
      tld: "flexera.eu"
    },
    "api.optima-apac.flexeraeng.com": {
	    api: "api.flexera.au",
      flexera: "api.flexera.au",
      fsm: "api.fsm-apac.flexeraeng.com",
      grs: "grs-front.ap-southeast-2.iam-apac.flexeraeng.com",
      ui: "app.flexera.au",
      tld: "flexera.au"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

# Get applied policy metadata for use later
datasource "ds_applied_policy" do
  request do
    auth $auth_flexera
    host val($ds_flexera_api_hosts, "flexera")
    path join(["/policy/v1/orgs/", rs_org_id, "/projects/", rs_project_id, "/applied-policies", switch(policy_id, join(["/", policy_id]), "")])
  end
end

datasource "ds_currency_reference" do
  request do
    host "raw.githubusercontent.com"
    path "/flexera-public/policy_templates/master/data/currency/currency_reference.json"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_currency_code" do
  request do
    auth $auth_flexera
    host rs_optima_host
    path join(["/bill-analysis/orgs/", rs_org_id, "/settings/currency_code"])
    header "Api-Version", "0.1"
    header "User-Agent", "RS Policies"
    ignore_status [403]
  end
  result do
    encoding "json"
    field "id", jmes_path(response, "id")
    field "value", jmes_path(response, "value")
  end
end

datasource "ds_currency" do
  run_script $js_currency, $ds_currency_reference, $ds_currency_code
end

script "js_currency", type:"javascript" do
  parameters "ds_currency_reference", "ds_currency_code"
  result "result"
  code <<-'EOS'
  symbol = "$"
  separator = ","

  if (ds_currency_code['value'] != undefined) {
    if (ds_currency_reference[ds_currency_code['value']] != undefined) {
      symbol = ds_currency_reference[ds_currency_code['value']]['symbol']

      if (ds_currency_reference[ds_currency_code['value']]['t_separator'] != undefined) {
        separator = ds_currency_reference[ds_currency_code['value']]['t_separator']
      } else {
        separator = ""
      }
    }
  }

  result = {
    symbol: symbol,
    separator: separator
  }
EOS
end

datasource "ds_oci_recommendation_actions" do
  request do
    auth $auth_oracle
    pagination $pagination_oracle
    host join(["optimizer.", $param_primary_region, ".oci.oraclecloud.com"])
    path "/20200606/resourceActions"
    query "compartmentId", $param_root_compartment
    query "compartmentIdInSubtree", "true"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items[*]") do
      field "categoryId", jmes_path(col_item, "categoryId")
      field "compartmentId", jmes_path(col_item, "compartmentId")
      field "compartmentName", jmes_path(col_item, "compartmentName")
      field "estimatedCostSaving", jmes_path(col_item, "estimatedCostSaving")
      field "extendedMetadata", jmes_path(col_item, "extendedMetadata")
      field "id", jmes_path(col_item, "id")
      field "lifecycleState", jmes_path(col_item, "lifecycleState")
      field "metadata", jmes_path(col_item, "metadata")
      field "name", jmes_path(col_item, "name")
      field "recommendationId", jmes_path(col_item, "recommendationId")
      field "resourceId", jmes_path(col_item, "resourceId")
      field "resourceType", jmes_path(col_item, "resourceType")
      field "status", jmes_path(col_item, "status")
      field "timeCreated", jmes_path(col_item, "timeCreated")
      field "timeStatusBegin", jmes_path(col_item, "timeStatusBegin")
      field "timeStatusEnd", jmes_path(col_item, "timeStatusEnd")
      field "timeUpdated", jmes_path(col_item, "timeUpdated")
    end
  end
end

datasource "ds_oci_recommendation_list" do
  request do
    auth $auth_oracle
    pagination $pagination_oracle
    host join(["optimizer.", $param_primary_region, ".oci.oraclecloud.com"])
    path "/20200606/recommendations"
    query "compartmentId", $param_root_compartment
    query "compartmentIdInSubtree", "true"
    query "includeResourceMetadata", "true"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "items[*]") do
      field "categoryId", jmes_path(col_item, "categoryId")
      field "compartmentId", jmes_path(col_item, "compartmentId")
      field "description", jmes_path(col_item, "description")
      field "estimatedCostSaving", jmes_path(col_item, "estimatedCostSaving")
      field "id", jmes_path(col_item, "id")
      field "importance", jmes_path(col_item,"importance")
      field "lifecycleState", jmes_path(col_item, "lifecycleState")
      field "name", jmes_path(col_item, "name")
      field "resourceCounts", jmes_path(col_item, "resourceCounts")
      field "status", jmes_path(col_item, "status")
      field "supportedLevels", jmes_path(col_item, "supportedLevels")
      field "timeCreated", jmes_path(col_item, "timeCreated")
      field "timeStatusBegin", jmes_path(col_item, "timeStatusBegin")
      field "timeStatusEnd", jmes_path(col_item, "timeStatusEnd")
      field "timeUpdated", jmes_path(col_item, "timeUpdated")
      field "metadata", jmes_path(col_item, "metadata")
      field "computeCpuUtilization", jmes_path(col_item, "metadata.computeCpuUtilization")
      field "computeMemoryUtilization", jmes_path(col_item, "metadata.computeMemoryUtilization")
      field "extendedMetadata", jmes_path(col_item, "extendedMetadata")
      field "currentShape", jmes_path(col_item, "extendedMetadata.CurrentShape.name")
      field "recommendedShape", jmes_path(col_item, "extendedMetadata.RecommendedShape.name")
    end
  end
end

datasource "ds_oci_filtered_recommendations" do
  run_script $js_oci_filtered_recommendations, $ds_oci_recommendation_actions, $ds_oci_recommendation_list, $ds_currency, $ds_applied_policy, $param_min_savings
end

script "js_oci_filtered_recommendations", type: "javascript" do
  parameters "ds_oci_recommendation_actions", "ds_oci_recommendation_list", "ds_currency", "ds_applied_policy", "param_min_savings"
  result "result"
  code <<-'EOS'
  // Function for formatting currency numbers later
  function formatNumber(number, separator) {
    formatted_number = "0"

    if (number) {
      formatted_number = (Math.round(number * 100) / 100).toString().split(".")[0]

      if (separator) {
        withSeparator = ""

        for (var i = 0; i < formatted_number.length; i++) {
          if (i > 0 && (formatted_number.length - i) % 3 == 0) { withSeparator += separator }
          withSeparator += formatted_number[i]
        }

        formatted_number = withSeparator
      }

      decimal = (Math.round(number * 100) / 100).toString().split(".")[1]
      if (decimal) { formatted_number += "." + decimal }
    }

    return formatted_number
  }

  // This is what we use to filter for Rightsize Compute recommendations specifically
  category_filter = "cost-management-compute-host-underutilized-desc"

  result = []
  total_savings = 0.0

  valid_recommendations = _.filter(ds_oci_recommendation_list, function(item) {
    return item['description'] == category_filter
  })

  valid_ids = _.pluck(valid_recommendations, "id")

  recommendations = _.filter(ds_oci_recommendation_actions, function(action) {
    return _.contains(valid_ids, action['recommendationId']) && parseFloat(action['estimatedCostSaving']) >= param_min_savings
  })

  _.each(recommendations, function(action) {
    total_savings += parseFloat(action['estimatedCostSaving'])

    result.push({
      accountID: action['compartmentId'],
      accountName: action['compartmentName'],
      tenantId: action['extendedMetadata']['resourceOwningTenancyId'],
      tenantName: action['extendedMetadata']['resourceOwningTenancyName'],
      savings: parseFloat(action['estimatedCostSaving']).toFixed(0),
      savingsCurrency: ds_currency['symbol'],
      resourceID: action['resourceId'],
      actionId: action['id'],
      status: action['status'],
      region: action['extendedMetadata']['region'],
      osType: action['extendedMetadata']['operatingSystem'],
      cpuAverage: Math.round(parseFloat(action['computeCpuUtilization']) * 100) / 100,
      memAverage: Math.round(parseFloat(action['computeMemoryUtilization']) * 100) / 100,
      resourceType: action['currentShape'],
      newResourceType: action['recommendedShape'],
      policy_name: ds_applied_policy["name"],
      total_savings: "",
      message: ""
    })
  })

  savings_message = [
    ds_currency['symbol'], ' ',
    formatNumber(Math.round(total_savings * 1000) / 1000, ds_currency['separator'])
  ].join('')

  noun = result.length == 1 ? "recommendation" : "recommendations"
  phrase = result.length == 1 ? "This recommendation" : "These recommendations"

  message = [
    result.length, " Cloud Advisor rightsizing ", noun, " found. ", phrase, " can be ",
    "adjusted by modifying your Cloud Advisor settings within your Oracle environment.\n\n",
    "CPU and Memory metrics are based on your Cloud Advisor configuration."
  ].join('')

  // Sort by descending order of savings value
  result = _.sortBy(result, 'savings').reverse()

  // Dummy item to ensure that the check statement in the policy executes at least once
  result.push({
    resourceID: "",
    cpuAverage: "",
    memAverage: "",
    savings: "",
    savingsCurrency: "",
    total_savings: "",
    message: ""
  })

  result[0]['total_savings'] = savings_message
  result[0]['message'] = message
  result[0]['policy_name'] = ds_applied_policy['name']
EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_oci_rightsize_compute_recommendations" do
  validate $ds_oci_filtered_recommendations do
    summary_template "{{ with index data 0 }}{{ .policy_name }}{{ end }}: {{ len data }} Oracle Underutilized Virtual Machine Recommendations Found"
    detail_template <<-'EOS'
    **Potential Monthly Savings:** {{ with index data 0 }}{{ .total_savings }}{{ end }}

    {{ with index data 0 }}{{ .message }}{{ end }}
    EOS
    check eq(val(item, "resourceID"), "")
    escalate $esc_email
    hash_exclude "message", "total_savings", "savings", "savingsCurrency", "cpuAverage", "memAverage"
    export do
      resource_level true
      field "accountID" do
        label "Compartment ID"
      end
      field "accountName" do
        label "Compartment Name"
      end
      field "tenantId" do
        label "Tenant ID"
      end
      field "tenantName" do
        label "Tenant Name"
      end
      field "resourceID" do
        label "Resource ID"
      end
      field "region" do
        label "Region"
      end
      field "osType" do
        label "Operating System"
      end
      field "resourceType" do
        label "Current Instance Size"
      end
      field "newResourceType" do
        label "Recommended Instance Size"
      end
      field "savings" do
        label "Estimated Monthly Savings"
      end
      field "savingsCurrency" do
        label "Savings Currency"
      end
      field "cpuAverage" do
        label "CPU Usage (%)"
      end
      field "memAverage" do
        label "Memory Usage (%)"
      end
      field "id" do
        label "ID"
        path "resourceId"
      end
      field "actionId" do
        label "Action ID"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
