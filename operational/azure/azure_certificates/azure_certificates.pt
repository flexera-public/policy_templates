name "Expiring Azure Certificates"
rs_pt_ver 20180301
type "policy"
short_description "Raise an incident if there are expired and almost expired certificates on the Azure account in active use. \n See the [README](https://github.com/flexera/policy_templates/tree/master/operational/azure/azure_certificates) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
category "Operational"
severity "low"
default_frequency "daily"
info(
  version: "2.0",
  provider: "Azure",
  service: "Compute",
  policy_set: ""
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify."
end

parameter "param_numberofdays" do
  type "string"
  label "Days"
  description "Number of days from expiration to raise an incident."
end

parameter "param_exclusion_tag_key" do
  category "User Inputs"
  label "Exclusion Tag Key"
  description "Azure-native instance tag to ignore instances that match the disallowed instance type. Only supply the tag key. The policy assumes that the tag value is irrelevant."
  type "string"
end

###############################################################################
# Authentication
###############################################################################

credentials "azure_auth" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential from the list."
  tags "provider=azure_rm"
end

###############################################################################
# Pagination
###############################################################################

pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_subscriptions" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host "management.azure.com"
    path "/subscriptions/"
    query "api-version","2018-06-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscriptionId", jmes_path(col_item,"subscriptionId")
      field "subscriptionName", jmes_path(col_item,"displayName")
    end
  end
end

datasource "ds_certificates" do
  iterate $ds_subscriptions
  request do
    auth $azure_auth
    pagination $azure_pagination
    host "management.azure.com"
    path join(["/subscriptions/", val(iter_item, "subscriptionId"), "/providers/Microsoft.Web/certificates", ])
    query "api-version","2019-08-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item, "id")
      field "subscriptionName", val(iter_item, "subscriptionName")
      field "subscriptionId", val(iter_item, "subscriptionId")
      field "location", jmes_path(col_item, "location")
      field "name", jmes_path(col_item, "name")
      field "tags", jmes_path(col_item, "tags")
      field "expirationDate", jmes_path(col_item, "properties.expirationDate")
      field "subjectName", jmes_path(col_item, "properties.subjectName")
      field "issuer", jmes_path(col_item, "properties.issuer")
      field "issueDate", jmes_path(col_item, "properties.issueDate")
      field "hostNames", jmes_path(col_item, "properties.hostNames")
      field "thumbprint", jmes_path(col_item, "properties.thumbprint")
      field "keyVaultId", jmes_path(col_item, "properties.keyVaultId")
      field "keyVaultSecretName", jmes_path(col_item, "properties.keyVaultSecretName")
      field "keyVaultSecretStatus", jmes_path(col_item, "properties.keyVaultSecretStatus")
    end
  end
end

datasource "ds_filtered_certificates" do
  run_script $js_filter_certificates, $ds_certificates, $param_exclusion_tag_key, $param_numberofdays
end

###############################################################################
# Scripts
###############################################################################
script "js_filter_certificates", type: "javascript" do
  parameters "certificates", "exclusion_tag", "expire_days"
  result "bad_certs"
  code <<-EOS
    var bad_certs = [];
    nowDate = new Date();

    _.each(certificates, function(test_cert) {
      if (!(_.has(test_cert.tags, exclusion_tag))) {
        cert = test_cert
        cert["rgName"] = cert["id"].split('/')[4]
        cert["id"] = cert["id"].split('/')[8]
        cert["certStatus"] = "Active";

        compareDate = new Date(cert["expirationDate"]);
        if (nowDate > compareDate) {
          cert["certStatus"] = "Expired";
        }

        if ((expire_days > ((compareDate - nowDate) / 86400000)) || cert["certStatus"] == "Expired") {
          bad_certs.push(cert)
        }
      }
    })

    bad_certs = _.sortBy(bad_certs, 'subscriptionName');
    bad_certs = _.sortBy(bad_certs, 'rgName');
EOS
end

###############################################################################
# Policy
###############################################################################

policy "azure_certificate_policy" do
  validate $ds_filtered_certificates do
    summary_template "Expiring/Expired Certificates Found: {{ len data }} App Service Certificates"
    escalate $esc_report_bad_certs
    check eq(size(data), 0)
    export do
      resource_level true
      field "id" do
        label "id"
      end
      field "subscriptionName" do
        label "Subscription Name"
      end
      field "rgName" do
        label "Resource Group"
      end
      field "location" do
        label "Location"
      end
      field "expirationDate" do
        label "Expiration Date"
      end
      field "name" do
        label "Subject"
      end
      field "subjectName" do
        label "Certificate Name"
      end
      field "issuer" do
        label "Issuer"
      end
      field "issueDate" do
        label "Issue Date"
      end
      field "hostNames" do
        label "Host Names"
      end
      field "thumbprint" do
        label "Thumbprint"
      end
      field "keyVaultId" do
        label "Key Vault ID"
      end
      field "keyVaultSecretName" do
        label "Key Vault Secret Name"
      end
      field "keyVaultSecretStatus" do
        label "Key Vault Secret Status"
      end
      field "certStatus" do
        label "Certificate Status"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_report_bad_certs" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
