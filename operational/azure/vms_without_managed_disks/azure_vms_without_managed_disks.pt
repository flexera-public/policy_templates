name "Azure VMs Not Using Managed Disks"
rs_pt_ver 20180301
type "policy"
short_description "Report any VMs that are not using managed disks in Azure. \n See the [README](https://github.com/rightscale/policy_templates/tree/master/operational/azure/vms_without_managed_disks) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
category "Operational"
severity "low"
default_frequency "daily"
info(
  version: "2.6",
  provider: "Azure",
  service: "Compute",
  policy_set: ""
)


###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_azure_endpoint" do
  type "string"
  label "Azure Endpoint"
  allowed_values "management.azure.com", "management.chinacloudapi.cn"
  default "management.azure.com"
end

parameter "param_subscription_whitelist" do
  label "Subscription Whitelist"
  type "list"
  description "Whitelisted Subscriptions, if empty, all subscriptions will be checked"
end

parameter "param_exclusion_tag_key" do
  category "User Inputs"
  label "Exclusion Tag Key"
  description "Azure-native instance tag to ignore instances that match the disallowed instance type. Only supply the tag key. The policy assumes that the tag value is irrelevant."
  type "string"
end

###############################################################################
# Authentication
###############################################################################

credentials "azure_auth" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential from the list."
  tags "provider=azure_rm"
end

###############################################################################
# Pagination
###############################################################################

pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_subscriptions" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path "/subscriptions/"
    query "api-version","2018-06-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscriptionId", jmes_path(col_item,"subscriptionId")
      field "subscriptionName", jmes_path(col_item,"displayName")
    end
  end
end

datasource "ds_filtered_subscriptions" do
  run_script $js_filtered_subscriptions, $ds_subscriptions, $param_subscription_whitelist
end

datasource "ds_azure_virtual_machines" do
  iterate $ds_filtered_subscriptions
    request do
      auth $azure_auth
      pagination $azure_pagination
      host $param_azure_endpoint
      path join(["/subscriptions/", val(iter_item,"subscriptionId"), "/providers/Microsoft.Compute/virtualMachines"])
      query "api-version","2018-06-01"
      header "User-Agent", "RS Policies"
    end
    result do
      encoding "json"
      collect jmes_path(response, "value[*]") do
        field "subscriptionName", val(iter_item,"subscriptionName")
        field "id", jmes_path(col_item, "id")
        field "type", jmes_path(col_item, "type")
        field "location", jmes_path(col_item, "location")
        field "name", jmes_path(col_item, "name")
        field "osDisk", jmes_path(col_item, "properties.storageProfile.osDisk")
        field "tags", jmes_path(col_item, "tags")
        field "properties", jmes_path(col_item, "properties")
      end
    end
end

datasource "ds_filtered_virtual_machines" do
  run_script $js_filter_virtual_machines, $ds_azure_virtual_machines, $param_exclusion_tag_key
end

###############################################################################
# Scripts
###############################################################################

script "js_filtered_subscriptions", type: "javascript" do
  parameters "ds_subscriptions", "param_subscription_whitelist"
  result "results"
  code <<-EOS
  var results = []
  if ( param_subscription_whitelist.length != 0){
    results = []
    _.each(param_subscription_whitelist, function(sub){
      var found = _.find(ds_subscriptions, function(item){
        return item.subscriptionId == sub || item.subscriptionName.toLowerCase() == sub.toLowerCase();
      })
      results.push(found)
    })
  } else {
    results = ds_subscriptions
  }
EOS
end

script "js_filter_virtual_machines", type: "javascript" do
  parameters "ds_azure_virtual_machines", "param_exclusion_tag_key"
  result "result"
  code <<-EOS
    var result = [];
    _.each(ds_azure_virtual_machines, function(vm){
      if (vm.osDisk.vhd != null && vm.osDisk.vhd !== undefined){
        if (_.has(vm.tags, param_exclusion_tag_key)){
          // skip due to exclusion tag
        }else{
          var resourceGroup = vm.id.split('/')[4]
          var storageAccount = vm.osDisk.vhd.uri.split('/')[2].split('.')[0]
          result.push({
            subscriptionName: vm.subscriptionName,
            name: vm.name,
            resourceGroup: resourceGroup,
            location: vm.location,
            storageAccount: storageAccount,
            osDisk: vm.osDisk.vhd.uri,
            tags: JSON.stringify(vm["tags"])
          })
        }
      }
    })
    result = _.sortBy(result, 'subscriptionName');
    result = _.sortBy(result, 'location');
EOS
end
###############################################################################
# Policy
###############################################################################

policy "azure_resource_policy" do
  validate_each $ds_filtered_virtual_machines do
    summary_template "{{ len data }} Azure VMs without managed disks"
    export do
      field "subscriptionName" do
        label "Subscription Name"
      end
      field "location" do
        label "Location"
      end
      field "name" do
        label "Name"
      end
      field "resourceGroup" do
        label "Resource Group"
      end
      field "storageAccount" do
        label "Storage Account"
      end
      field "osDisk" do
        label "osDisk VHD"
      end
      field "tags" do
        label "Tags"
      end
    end
    escalate $email
    check eq(0,1)
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
