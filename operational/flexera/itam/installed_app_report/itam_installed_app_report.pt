name "ITAM Installed Application Report"
rs_pt_ver 20180301
type "policy"
short_description "Produces a report of installed applications stored in Flexera ITAM. See the [README](https://github.com/flexera-public/policy_templates/tree/master/operational/flexera/itam/installed_app_report) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
doc_link "https://github.com/flexera-public/policy_templates/tree/master/operational/flexera/itam/installed_app_report"
category "Operational"
severity "low"
default_frequency "weekly"
info(
  version: "0.1.2",
  provider: "Flexera",
  service: "IT Asset Management",
  policy_set: "ITAM Report",
  hide_skip_approvals: "true"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email Addresses"
  description "A list of email addresses to notify."
  default []
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_flexera" do
  schemes "oauth2"
  label "Flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Pagination
###############################################################################

pagination "pagination_flexera" do
  get_page_marker do
    body_path jq(response, "if .total == 0 then null else .offset + 10000 end")
  end
  set_page_marker do
    query "offset"
  end
end

###############################################################################
# Datasources & Scripts
###############################################################################

# Get region-specific Flexera API endpoints
datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-EOS
  host_table = {
    "api.optima.flexeraeng.com": {
	    api: "api.flexera.com",
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com",
      grs: "grs-front.iam-us-east-1.flexeraeng.com",
      ui: "app.flexera.com",
      tld: "flexera.com"
    },
    "api.optima-eu.flexeraeng.com": {
	    api: "api.flexera.eu",
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com",
      grs: "grs-front.eu-central-1.iam-eu.flexeraeng.com",
      ui: "app.flexera.eu",
      tld: "flexera.eu"
    },
    "api.optima-apac.flexeraeng.com": {
	    api: "api.flexera.au",
      flexera: "api.flexera.au",
      fsm: "api.fsm-apac.flexeraeng.com",
      grs: "grs-front.ap-southeast-2.iam-apac.flexeraeng.com",
      ui: "app.flexera.au",
      tld: "flexera.au"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

# Get applied policy metadata for use later
datasource "ds_applied_policy" do
  request do
    auth $auth_flexera
    host val($ds_flexera_api_hosts, "flexera")
    path join(["/policy/v1/orgs/", rs_org_id, "/projects/", rs_project_id, "/applied-policies", switch(policy_id, join(["/", policy_id]), "")])
  end
end

datasource "ds_itam_apps" do
  request do
    run_script $js_itam_apps, val($ds_flexera_api_hosts, "flexera"), rs_org_id
  end
  result do
    encoding "json"
    collect jmes_path(response, "values[*]") do
      field "id", jmes_path(col_item, "flexeraId")
      field "name", jmes_path(col_item, "name")
      field "category", jmes_path(col_item, "category")
      field "classification", jmes_path(col_item, "classification")
      field "edition", jmes_path(col_item, "edition")
      field "installed", jmes_path(col_item, "installed")
      field "isLocked", jmes_path(col_item, "isLocked")
      field "licensed", jmes_path(col_item, "licensed")
      field "product", jmes_path(col_item, "product")
      field "publisher", jmes_path(col_item, "publisher")
      field "source", jmes_path(col_item, "source")
      field "status", jmes_path(col_item, "status")
      field "suite", jmes_path(col_item, "suite")
      field "usage", jmes_path(col_item, "usage")
      field "version", jmes_path(col_item, "version")
    end
  end
end

script "js_itam_apps", type: "javascript" do
  parameters "flexera_api_host", "rs_org_id"
  result "request"
  code <<-EOS
  var request = {
    auth: "auth_flexera",
    pagination: "pagination_flexera",
    host: flexera_api_host,
    path: ["/fnms/v1/orgs/", rs_org_id, "/installed-applications"].join(''),
    headers: { "User-Agent": "RS Policies" },
    query_params: { limit: 10000 }
  }
EOS
end

datasource "ds_itam_apps_report" do
  run_script $js_itam_apps_report, $ds_itam_apps, $ds_applied_policy
end

script "js_itam_apps_report", type: "javascript" do
  parameters "ds_itam_apps", "ds_applied_policy"
  result "result"
  code <<-'EOS'
  result = _.map(ds_itam_apps, function(item) {
    new_item = {}
    _.each(_.keys(item), function(key) { new_item[key] = item[key] })

    new_item["policy_name"] = ds_applied_policy["name"]
    new_item["message"] = ""

    return new_item
  })

  if (result.length > 0) {
    result[0]["message"] = [ "Installed Applications Found: ", result.length.toString() ].join('')
  }
EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_itam_apps_report" do
  validate_each $ds_itam_apps_report do
    summary_template "{{ with index data 0 }}{{ .policy_name }}{{ end }}: {{ len data }} ITAM Installed Applications Found"
    detail_template "{{ with index data 0 }}{{ .message }}{{ end }}"
    check eq(val(item, "id"), "")
    escalate $esc_email
    hash_exclude "message"
    export do
      resource_level true
      field "id" do
        label "ID"
      end
      field "name" do
        label "Name"
      end
      field "publisher" do
        label "Publisher"
      end
      field "product" do
        label "Product"
      end
      field "edition" do
        label "Edition"
      end
      field "version" do
        label "Version"
      end
      field "category" do
        label "Category"
      end
      field "classification" do
        label "Classification"
      end
      field "status" do
        label "Status"
      end
      field "installed" do
        label "Installed"
      end
      field "licensed" do
        label "Licensed"
      end
      field "isLocked" do
        label "Locked"
      end
      field "source" do
        label "Source"
      end
      field "suite" do
        label "Suite"
      end
      field "usage" do
        label "Usage"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
