name "Flexera One API Event Report"
rs_pt_ver 20180301
type "policy"
short_description "Reports Flexera API events for the user-specified amount of time. See the [README](https://github.com/flexera-public/policy_templates/tree/master/operational/flexera/iam/api_event_report) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
category "Operational"
severity "low"
default_frequency "weekly"
info(
  version: "0.1.0",
  provider: "Flexera",
  service: "Identity & Access Management",
  policy_set: "Identity & Access Management"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email Addresses"
  description "Email addresses of the recipients you wish to notify."
  default []
end

parameter "param_days_back" do
  type "number"
  category "Policy Settings"
  label "Days Back"
  description "How many days of API events to include in the report. All events from this many days back until today will be reported."
  min_value 1
  default 7
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_flexera" do
  schemes "oauth2"
  label "Flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Pagination
###############################################################################

pagination "pagination_flexera" do
  get_page_marker do
    body_path jmes_path(response, "nextPage")
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources & Scripts
###############################################################################

# Get applied policy metadata for use later
datasource "ds_applied_policy" do
  request do
    auth $auth_flexera
    host rs_governance_host
    path join(["/api/governance/projects/", rs_project_id, "/applied_policies/", policy_id])
    header "Api-Version", "1.0"
  end
end

# Get region-specific Flexera API endpoints
datasource "ds_flexera_api_hosts" do
  run_script $js_flexera_api_hosts, rs_optima_host
end

script "js_flexera_api_hosts", type: "javascript" do
  parameters "rs_optima_host"
  result "result"
  code <<-EOS
  host_table = {
    "api.optima.flexeraeng.com": {
      flexera: "api.flexera.com",
      fsm: "api.fsm.flexeraeng.com",
      grs: "grs-front.iam-us-east-1.flexeraeng.com"
    },
    "api.optima-eu.flexeraeng.com": {
      flexera: "api.flexera.eu",
      fsm: "api.fsm-eu.flexeraeng.com",
      grs: "grs-front.eu-central-1.iam-eu.flexeraeng.com"
    },
    "api.optima-apac.flexeraeng.com": {
      flexera: "api.flexera.au",
      fsm: "api.fsm-apac.flexeraeng.com",
      grs: "grs-front.ap-southeast-2.iam-apac.flexeraeng.com"
    }
  }

  result = host_table[rs_optima_host]
EOS
end

datasource "ds_api_timestamp_filter" do
  run_script $js_api_timestamp_filter, $param_days_back
end

script "js_api_timestamp_filter", type: "javascript" do
  parameters "param_days_back"
  result "result"
  code <<-EOS
  date = new Date()
  date.setDate(date.getDate() - param_days_back)
  result = { filter: ["(timestamp ge '", date.toISOString(), "')"].join('') }
EOS
end

datasource "ds_api_events" do
  request do
    auth $auth_flexera
    pagination $pagination_flexera
    host val($ds_flexera_api_hosts, "flexera")
    path join(["/iam/v1/orgs/", rs_org_id, "/api-events"])
    query "filter", val($ds_api_timestamp_filter, "filter")
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "values[*]") do
      field "eventType", jmes_path(col_item, "eventType")
      field "timestamp", jmes_path(col_item, "timestamp")
      field "userId", jmes_path(col_item, "principal.id")
      field "userEmail", jmes_path(col_item, "principal.email")
      field "userName", jmes_path(col_item, "principal.name")
      field "userFirstName", jmes_path(col_item, "principal.firstName")
      field "userLastName", jmes_path(col_item, "principal.lastName")
      field "id", jmes_path(col_item, "request.id")
      field "requestVerb", jmes_path(col_item, "request.httpMethod")
      field "requestHost", jmes_path(col_item, "request.httpHost")
      field "requestPath", jmes_path(col_item, "request.httpPath")
      field "requestIP", jmes_path(col_item, "request.ip")
      field "requestUserAgent", jmes_path(col_item, "request.userAgent")
      field "responseCode", jmes_path(col_item, "response.httpCode")
      field "responseStatus", jmes_path(col_item, "response.httpStatus")
    end
  end
end

datasource "ds_api_events_report" do
  run_script $js_api_events_report, $ds_api_events, $ds_applied_policy, $param_days_back
end

script "js_api_events_report", type: "javascript" do
  parameters "ds_api_events", "ds_applied_policy", "param_days_back"
  result "result"
  code <<-EOS
  result = _.map(ds_api_events, function(event) {
    new_event = {}
    _.each(_.keys(event), function(key) { new_event[key] = event[key] })

    new_event["request"] = [ event['requestVerb'], " ", event['requestHost'], event['requestPath'] ].join('').
    new_event["response"] = [ event['responseCode'], " ", event['responseStatus'] ].join('')
    new_event["days_back"] = param_days_back
    new_event["policy_name"] = ds_applied_policy["name"]

    return new_event
  })

  result = _.sortBy(result, "timestamp").reverse()
EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_api_events_report" do
  validate_each $ds_api_events_report do
    summary_template "{{ with index data 0 }}{{ .policy_name }}{{ end }}: Last {{ with index data 0 }}{{ .days_back }}{{ end }} Days"
    check eq(val(item, "timestamp"), "")
    escalate $esc_email
    export do
      resource_level true
      field "timestamp" do
        label "Timestamp"
      end
      field "eventType" do
        label "Event Type"
      end
      field "userId" do
        label "User ID"
      end
      field "userName" do
        label "User Name"
      end
      field "userEmail" do
        label "User Email"
      end
      field "requestIP" do
        label "IP Address"
      end
      field "id" do
        label "Request ID"
      end
      field "request" do
        label "Request"
      end
      field "response" do
        label "Response"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
