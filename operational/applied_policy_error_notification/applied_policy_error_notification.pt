name "Applied Policy Error Notification"
rs_pt_ver 20180301
type "policy"
short_description "Collects all currently applied policies and raises an incident for any in an error state. See the [README](https://github.com/flexera/policy_templates/tree/master/operational/applied_policy_error_notification/) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "high"
category "Operational"
default_frequency "hourly"
info(
    version: "2.0",
    provider: "Flexera Cloud Management",
    service: "",
    policy_set: ""
  )

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
  description "A list of email addresses to notify"
  min_length 1
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_rs" do
  schemes "oauth2"
  label "flexera"
  description "Select FlexeraOne OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_applied_policies" do
  request do
    auth $auth_rs
    verb "GET"
    host rs_governance_host
    path join(["/api/governance/projects/", rs_project_id, "/applied_policies"])
    header "Api-Version", "1.0"
    header "User-Agent", "RS Policies"
  end
  result do
    collect jmes_path(response, "items[*]") do
      field "id", join(["[", jmes_path(col_item, "name"), "](https://", rs_governance_host, "/api/governance/projects/", rs_project_id, "/applied_policies/", jmes_path(col_item, "id"),")"])
      field "policy_aggregate_id", jmes_path(col_item, "policy_aggregate_id")
      field "name", jmes_path(col_item, "name")
      field "href", jmes_path(col_item, "href")
      field "created_at", jmes_path(col_item, "created_at")
      field "updated_at", jmes_path(col_item, "updated_at")
      field "status", jmes_path(col_item, "status")
      field "error", jmes_path(col_item, "error")
      field "errored_at" , jmes_path(col_item, "errored_at")
      field "created_by" , jmes_path(col_item, "created_by.email")
      field "scope", jmes_path(col_item, "scope")
    end
  end
end

###############################################################################
# Scripts
###############################################################################


###############################################################################
# Policy
###############################################################################

policy "pol_applied_policies" do
  validate_each $ds_applied_policies do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Failed Policies"
    export do
      resource_level true
      field "id" do
        label "Applied Policy Id"
      end
      field "name" do
        label "Name"
      end
      field "scope" do
        label "Scope"
      end
      field "created_by" do
        label "Created By"
      end
      field "created_at" do
        label "Created At"
      end
      field "updated_at" do
        label "Updated At"
      end
      field "errored_at" do
        label "Errored At"
      end
      field "error" do
        label "Error Message"
      end
    end
    escalate $ese_email
    check ne(val(item, "status"), "error")
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "ese_email" do
  email $param_email
end
