name "ITAM Expiring Licenses"
rs_pt_ver 20180301
type "policy"
short_description "Looks up Active Flexnet Manager Licenses Expiring within set Time Period and sends the result as an email.  See the [README](https://github.com/flexera/policy_templates/tree/master/compliance/fnms/fnms_licenses_expiring) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "medium"
category "Compliance"
default_frequency "weekly"
info(
  version: "2.0",
  provider: "Flexera ITAM",
  service: "",
  policy_set: "ITAM"
)

parameter "param_expiring" do
  type "number"
  label "Time Period of Expiration"
  description "Number of days out to search for license expiration"
  default 90
end

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
  description "A list of email addresse(s) to notify"
end

credentials "auth_flexeraone" do
  schemes "oauth2"
  label "flexera"
  description "Select FlexeraOne OAuth2 credentials"
  tags "provider=flexera"
end

pagination "itam_pagination" do
  get_page_marker do
    body_path jq(response, "if .total == 0 then null else .offset + 10000 end")
  end
  set_page_marker do
    query "offset"
  end
end

datasource "ds_licenses" do
  request do
    auth $auth_flexeraone
    host "api.flexera.com"
    path join(["/fnms/v1/orgs/", rs_org_id, "/license-attributes"])
    header "Api-Version", "0.1"
    header "User-Agent", "RS Policies"
    query "status", "Active"
    query "limit", "10000"
    pagination $itam_pagination
  end
end

datasource "ds_check_date" do
  run_script $js_check_date, $ds_licenses, $param_expiring
end

script "js_check_date", type: "javascript" do
  parameters "ds_licenses", "param_expiring"
  result "results"
  code <<-EOF
  var results = [];

  _.each(ds_licenses[0].values, function (license) {

    var startDate = new Date(license.expiryDate); // Inventory Date
    var endDate = new Date();
    var timeDifference =  startDate.getTime() - endDate.getTime();
    var daysDifference = parseInt(timeDifference / (1000 * 3600 * 24));
    if ((daysDifference <= param_expiring) && license.licenseStatus != '[Retired]' && license.expiryDate.length != '') {
      license.expiring = 1;
      results.push(license);
    }

  });

EOF
end

policy 'itam_policy' do
  validate_each $ds_check_date do
    summary_template 'IT Asset - Expiring Licenses'
    escalate $send_report
    check eq(to_n(val(item,"expiring")),0)
    export do
      field "licenseId"
      field "publisher"
      field "licenseName"
      field "version"
      field "edition"
      field "licenseStatus"
      field "licenseDuration"
      field "licenseType"
      field "expiryDate"

    end
  end
end

escalation "send_report" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
