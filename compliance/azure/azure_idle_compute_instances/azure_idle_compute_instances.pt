name "Azure Idle Compute Instances"
rs_pt_ver 20180301
type "policy"
short_description "Report on any instances that have lower than specified average CPU utilization and delete them with approval"
long_description "Version: 1.0"
category "Compliance"
severity "low"

###############################################################################
# Parameters
###############################################################################

#pass in the email address to notify
parameter "param_email" do
  type "list"
  label "Email address"
  description "Please enter the email address to use for the escalation"
end

#pass in tenant ID
parameter "param_azure_tenant_id" do
  type "string"
  label "Azure AD Tenant ID"
  category "Azure"
  description "Please enter your Azure tenant ID.  You can find it by following this guide: https://docs.microsoft.com/en-us/onedrive/find-your-office-365-tenant-id"
end

#pass in Sub ID
parameter "param_azure_sub" do
  type "string"
  label "Azure Subscription ID"
  category "Azure"
  description "Please enter your Azure Subscription ID.  You can find it by following this guide: https://docs.bitnami.com/azure/faq/administration/find-subscription-id/"
end

#pass in the CPU in percentage
parameter "param_cpu_average_percentage" do
  type "string"
  label "CPU Threshold"
  description "Average CPU threshold at which to trigger a decommission"
  default "60"
  allowed_pattern /^[0-9]$|^[1-9][0-9]$|^(100)$/
end

###############################################################################
# Authentication
###############################################################################

#authenticate with Azure
auth "azure_auth", type: "oauth2" do
  token_url join(["https://login.microsoftonline.com/",$param_azure_tenant_id,"/oauth2/token"])
  grant type: "client_credentials" do
    client_id cred("AZURE_APPLICATION_ID")
    client_secret cred("AZURE_APPLICATION_KEY")
    additional_params do {
      "resource" => "https://management.azure.com/"
    } end
  end
end

###############################################################################
# Pagination
###############################################################################

#pagination support
pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

#get all virtual machines 
datasource "ds_azure_virtualmachines" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host "management.azure.com"
    path join(["/subscriptions/", $param_azure_sub, "/providers/Microsoft.Compute/virtualMachines"])
    query "api-version","2019-03-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item,"id")
      field "rg", get(4,split(jmes_path(col_item,"id"),'/'))
      field "name", jmes_path(col_item,"name")
      field "location", jmes_path(col_item, "location")
      field "tags", jmes_path(col_item,"tags")
    end
  end
end

#get cpu performance stats
datasource "ds_azure_instance_performance" do
  iterate $ds_azure_virtualmachines
  request do
    auth $azure_auth
    pagination $azure_pagination
    host "management.azure.com"
    path join(["/subscriptions/", $param_azure_sub, "/resourceGroups/", val(iter_item,"rg"), "/providers/Microsoft.Compute/virtualMachines/",val(iter_item,"name"),"/providers/microsoft.insights/metrics"])
    query "api-version","2016-09-01"
    query "timespan","P30D"
    header "User-Agent", "RS Policies"
  end 
  result do
    encoding "json"
    field "vmname", val(iter_item,"name") 
    field "rg", val(iter_item, "rg")
    field "id", val(iter_item, "id")
    field "location", val(iter_item, "location")
    field "tags", val(iter_item, "tags")
    field "averages" do
      collect jmes_path(response,"value[].data[]") do
        field "average", jmes_path(col_item,"average")
      end
    end
  end
end

datasource "ds_combineddata" do
  run_script $js_combineddata, $param_cpu_average_percentage, $ds_azure_instance_performance
end

###############################################################################
# Scripts
###############################################################################

#This is to get the average cpu over time for the machine and return the dataset of machines with issues
script "js_combineddata", type: "javascript" do
parameters "param_cpu_average_percentage","ds_azure_instance_performance"
result "results"
code <<-EOS
  var results = []
  _.each(ds_azure_instance_performance, function(result){
    var averages = _.pluck(result.averages,"average")

    var sum = _.reduce(averages, function(memo, num){ 
      if (num != null && num !== undefined){
        return memo + parseFloat(num)
      } else {}
      return memo + 0; 
      }, 
    0)

    var final_average = parseFloat(sum/averages.length)

    if (final_average < param_cpu_average_percentage && final_average != 0) {
      result["averagecpu"] = final_average
      results.push(result)
    }
  })
EOS
end


###############################################################################
# Policy
###############################################################################

policy "azure_resource_policy" do
  validate $ds_combineddata do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): Azure idle compute instances found"
    detail_template <<-EOS
# Azure Resources out of compliance
| Location | Name | CPU Average | Resource Group | Tags |
| -------- | ---- | ----------- | -------------- | ---- |
{{ range data -}}
{{ .location }} | {{.vmname}} | {{.averagecpu}} | {{.rg}} | {{range $i,$e := .tags}}{{$i}}:{{$e}},{{end}} |
{{ end -}}
EOS
    check eq(size(data), 0)
    escalate $email
    escalate $delete_resources
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "email" do
   email $param_email
end

escalation "delete_resources" do
  request_approval  do
    label "Approve Resource Deletion"
    description "Approve escalation to terminate the instance(s)"
    parameter "approval_reason" do
    type "string"
      label "Reason for Approval"
     description "Explain why you are approving the action"
    end
  end
 run "delete_resources", data, $param_azure_tenant_id,$param_azure_sub
end

###############################################################################
# Cloud Workflow
###############################################################################

define delete_resources($data, $param_azure_tenant_id,$param_azure_sub) return $all_responses do
  $$debug=true
  $$log = []
  $all_responses = []
  $syslog_subject = "Azure Terminate Instance: "
  call sys_log(join([$syslog_subject, "Identified Instances"]),to_s($data))
  call get_access_token($param_azure_tenant_id) retrieve $access_token
  $all_responses = []
  foreach $item in $data do
   sub on_error: skip do
      $response = http_request(
        verb: "delete",
        host: "management.azure.com",
        href: join(["/subscriptions/", $param_azure_sub, "/resourceGroups/", $item["rg"], "/providers/Microsoft.Compute/virtualMachines/",$item["vmname"]]),
        https: true,
        query_strings: {
          "api-version": "2018-06-01"
        },
        headers: {
          "cache-control": "no-cache",
          "content-type": "application/json",
          "authorization": "Bearer " + $access_token
        }
      )
      $all_responses << $response
    end
  end
  call sys_log(join([$syslog_subject, "Responses"]),to_s($all_responses))
end



define get_access_token($param_azure_tenant_id) return $access_token do

  $client_id = cred("AZURE_APPLICATION_ID")
  $client_secret = cred("AZURE_APPLICATION_KEY")

  $body_string = "grant_type=client_credentials&resource=https://management.core.windows.net/&client_id="+$client_id+"&client_secret="+$client_secret

  $auth_response = http_post(
    url: join(["https://login.microsoftonline.com/",$param_azure_tenant_id,"/oauth2/token?api-version=1.0"]),
    headers : {
      "cache-control":"no-cache",
      "content-type":"application/x-www-form-urlencoded"
    },
    body:$body_string
  )

  $auth_response_body = $auth_response["body"]
  $access_token = $auth_response_body["access_token"]

end

#function to log
define sys_log($subject, $detail) do
  if $$debug
    rs_cm.audit_entries.create(
      notify: "None",
      audit_entry: {
        auditee_href: @@account,
        summary: $subject,
        detail: $detail
      }
    )
  end
end