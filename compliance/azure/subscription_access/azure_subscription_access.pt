name "Azure Subscription Access"
rs_pt_ver 20180301
type "policy"
short_description "Lists anyone who has been granted Owner or Contributor access to an Azure subscription. \n See the [README](https://github.com/flexera/policy_templates/tree/master/compliance/azure/subscription_access) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
category "Compliance"
default_frequency "monthly"
severity "low"
info(
  version: "2.5",
  provider: "Azure",
  service: "Identity",
  policy_set: ""
  )

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_azure_endpoint" do
  type "string"
  label "Azure Endpoint"
  allowed_values "management.azure.com", "management.chinacloudapi.cn"
  default "management.azure.com"
end

parameter "param_subscription_whitelist" do
  label "Subscription Whitelist"
  type "list"
  description "Whitelisted Subscriptions, if empty, all subscriptions will be checked"
end

parameter "param_azure_roles" do
  type "list"
  label "Roles to report on"
  category "Azure"
  description "Can choose to report on Owner, Contributor, or Both"
  allowed_values "Owner", "Contributor"
end

###############################################################################
# Authentication
###############################################################################

#authenticate with Azure
credentials "azure_auth" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential from the list."
  tags "provider=azure_rm"
end

credentials "azure_graph_auth" do
  schemes "oauth2"
  label "Azure"
  description "Select the Azure Resource Manager Credential for Azure Active Directory API from the list."
  tags "provider=azure_graph"
end

###############################################################################
# Pagination
###############################################################################

pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

pagination "azure_graph_pagination" do
  get_page_marker do
    body_path '"@odata.nextLink"'
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_azure_users" do
  request do
    auth $azure_graph_auth
    pagination $azure_graph_pagination
    host "graph.microsoft.com"
    path join(["/v1.0/users"])
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item,"id")
      field "businessPhones", jmes_path(col_item,"businessPhones")
      field "displayName", jmes_path(col_item,"displayName")
      field "givenName", jmes_path(col_item,"givenName")
      field "id", jmes_path(col_item,"id")
      field "jobTitle", jmes_path(col_item,"jobTitle")
      field "mail", jmes_path(col_item,"mail")
      field "mobilePhone", jmes_path(col_item, "mobilePhone")
      field "officeLocation", jmes_path(col_item, "officeLocation")
      field "preferredLanguage", jmes_path(col_item, "preferredLanguage")
      field "surname", jmes_path(col_item,"surname")
      field "userPrincipalName", jmes_path(col_item,"userPrincipalName")
    end
  end
end

datasource "ds_subscriptions" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path "/subscriptions/"
    query "api-version","2020-01-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "subscriptionId", jmes_path(col_item,"subscriptionId")
      field "displayName", jmes_path(col_item,"displayName")
      field "state", jmes_path(col_item,"state")
      field "tags", jmes_path(col_item,"tags")
    end
  end
end

datasource "ds_filtered_subscriptions" do
  run_script $js_filtered_subscriptions, $ds_subscriptions, $param_subscription_whitelist
end

datasource "ds_azure_role_definitions" do
  iterate $ds_filtered_subscriptions
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item,"subscriptionId"), "/providers/Microsoft.Authorization/roleDefinitions"])
    query "api-version","2015-07-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item,"id")
      field "type", jmes_path(col_item,"type")
      field "name", jmes_path(col_item,"name")
      field "properties", jmes_path(col_item,"properties")
      field "subscriptionName",val(iter_item,"displayName")
    end
  end
end

datasource "ds_filtered_azure_role_definitions" do
  run_script $js_filtered_azure_role_definitions, $ds_azure_role_definitions, $param_azure_roles
end

datasource "ds_azure_role_assignments" do
  iterate $ds_filtered_subscriptions
  request do
    auth $azure_auth
    pagination $azure_pagination
    host $param_azure_endpoint
    path join(["/subscriptions/", val(iter_item,"subscriptionId"), "/providers/Microsoft.Authorization/roleAssignments"])
    query "api-version","2015-07-01"
    query "$filter","atScope()"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item,"id")
      field "type", jmes_path(col_item,"type")
      field "name", jmes_path(col_item,"name")
      field "properties", jmes_path(col_item,"properties")
    end
  end
end

datasource "filtered_resources" do
  run_script $js_filter_resources, $ds_azure_role_assignments, $ds_filtered_azure_role_definitions, $ds_azure_users
end

###############################################################################
# Scripts
###############################################################################

script "js_filtered_subscriptions", type: "javascript" do
  parameters "ds_subscriptions", "param_subscription_whitelist"
  result "results"
  code <<-EOS
  var results = []
  if ( param_subscription_whitelist.length != 0){
    results = []
    _.each(param_subscription_whitelist, function(sub){
      var found = _.find(ds_subscriptions, function(item){
        return item.subscriptionId == sub || item.displayName.toLowerCase() == sub.toLowerCase();
      })
      results.push(found)
    })
  } else {
    results = ds_subscriptions
  }
EOS
end

script "js_filtered_azure_role_definitions", type: "javascript" do
  parameters "ds_azure_role_definitions", "param_azure_roles"
  result "results"
  code <<-EOS
    var results = [];
    _.each(param_azure_roles,function(role) {
      var result = _.filter(ds_azure_role_definitions, function(definition){ return definition.properties.roleName == role})
      results.push(result)
    })
EOS
end

script "js_filter_resources", type: "javascript" do
  parameters "ds_azure_role_assignments", "ds_filtered_azure_role_definitions", "ds_azure_users"
  result "results"
  code <<-EOS
    var results = [];
    // Iterate through all resources for each array in the array
    for(var i = 0; i< ds_filtered_azure_role_definitions.length; i++) {
    _.each(ds_filtered_azure_role_definitions[i], function(definition){
      var result = _.filter(ds_azure_role_assignments, function(ra) { return ra.properties.roleDefinitionId == definition.id})
      _.each(result, function(r) {
        var user = _.find(ds_azure_users, function(user){ return user.id == r.properties.principalId })
        if (user != null){
          results.push({
            name: user.displayName,
            username: user.mail,
            principalname: user.userPrincipalName,
            role: definition.properties.roleName,
            subscriptionName: definition.subscriptionName,
            id:r.name
          })
        }
      })
    })
    }
    results=_.sortBy(results, 'subscriptionName');
    results=_.sortBy(results, 'name');
    results=_.sortBy(results, 'username');
EOS
end

###############################################################################
# Policy
###############################################################################

policy "azure_resource_policy" do
  validate_each $filtered_resources do
    summary_template "{{ len data }} Azure Users who are {{parameters.param_azure_roles}}"
    escalate $email
    check eq(0,1)
    export do
      resource_level true
      field "subscriptionName" do
        label "Subscription Name"
      end
      field "name" do
        label "Resource Name"
      end
      field "username" do
        label "Azure Username"
      end
      field "principalname" do
        label "Azure User Principal Name"
      end
      field "role" do
        label "Role"
      end
      field "id" do
        label "Role Assignment Id"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "email" do
  automatic true
  label "Send Email"
  description "Sends incident email"
  email $param_email
end

###############################################################################
# Cloud Workflow
###############################################################################

define sys_log($subject, $detail) do
  if $$debug
    rs_cm.audit_entries.create(
      notify: "None",
      audit_entry: {
        auditee_href: @@account,
        summary: "Azure Subscription Access - "+ $subject,
        detail: $detail
      }
    )
  end
end
