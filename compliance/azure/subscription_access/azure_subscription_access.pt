name "Azure Subscription Access"
rs_pt_ver 20180301
type "policy"
short_description "Report on anyone who has been granted Owner or Contributor access to an Azure subscription. \n See the [README](https://github.com/rightscale/policy_templates/tree/master/compliance/azure/subscription_access) and [docs.rightscale.com/policies](http://docs.rightscale.com/policies/) to learn more."
long_description "Version: 1.0"
category "Compliance"
severity "low"


###############################################################################
# Permissions
###############################################################################

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

parameter "param_azure_tenant_id" do
  type "string"
  label "Azure AD Tenant ID"
  category "Azure"
end

parameter "param_azure_sub" do
  type "string"
  label "Azure Subscription ID"
  category "Azure"
end

parameter "param_azure_roles" do
  type "list"
  label "Roles to report on"
  category "Azure"
  allowed_values "Owner", "Contributor"
end

###############################################################################
# Authentication
###############################################################################

auth "azure_auth", type: "oauth2" do
  token_url join(["https://login.microsoftonline.com/",$param_azure_tenant_id,"/oauth2/token"])
  grant type: "client_credentials" do
    client_id cred("AZURE_APPLICATION_ID")
    client_secret cred("AZURE_APPLICATION_KEY")
    additional_params do {
      "resource" => "https://management.azure.com/"
    } end
  end
end

###############################################################################
# Pagination
###############################################################################

pagination "azure_pagination" do
  get_page_marker do
    body_path "nextLink"
  end
  set_page_marker do
    uri true
  end
end

###############################################################################
# Datasources
###############################################################################

datasource "ds_azure_role_definitions" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host "management.azure.com"
    path join(["/subscriptions/", $param_azure_sub, "/providers/Microsoft.Authorization/roleDefinitions"])
    query "api-version","2015-07-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item,"id")
      field "type", jmes_path(col_item,"type")
      field "name", jmes_path(col_item,"name")
      field "properties", jmes_path(col_item,"properties")
    end
  end
end

datasource "ds_filtered_azure_role_definitions" do
  run_script $js_filtered_azure_role_definitions, $ds_azure_role_definitions, $param_azure_roles
end

datasource "ds_azure_role_assignments" do
  request do
    auth $azure_auth
    pagination $azure_pagination
    host "management.azure.com"
    path join(["/subscriptions/", $param_azure_sub, "/providers/Microsoft.Authorization/roleAssignments"])
    query "api-version","2015-07-01"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "value[*]") do
      field "id", jmes_path(col_item,"id")
      field "type", jmes_path(col_item,"type")
      field "name", jmes_path(col_item,"name")
      field "properties", jmes_path(col_item,"properties")
    end
  end
end

datasource "filtered_resources" do
  run_script $js_filter_resources, $ds_azure_role_assignments, $ds_filtered_azure_role_definitions
end

###############################################################################
# Scripts
###############################################################################

script "js_filtered_azure_role_definitions", type: "javascript" do
  parameters "ds_azure_role_definitions", "param_azure_roles"
  result "results"
  code <<-EOS
    var results = [];
    _.each(param_azure_roles,function(role) {
      console.log(role)
      var result = _.find(ds_azure_role_definitions, function(definition){ return definition.properties.roleName == role})
      results.push(result)
    })
EOS
end

script "js_filter_resources", type: "javascript" do
  parameters "ds_azure_role_assignments", "ds_filtered_azure_role_definitions"
  result "results"
  code <<-EOS
    var results = [];

    // Iterate through all resources
    _.each(ds_filtered_azure_role_definitions, function(definition){
      var result = _.find(ds_azure_role_assignments, function(ra) { return ra.properties.roleDefinitionId == definition.id})
      results.push(result)
    })

EOS
end

###############################################################################
# Policy
###############################################################################

policy "azure_resource_policy" do
  validate $filtered_resources do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Azure Resources out of compliance"
    detail_template <<-EOS
# Azure Resources out of compliance
| Resource Name | Azure Region | Resource ID |
| ----------------------- | ----------------------- | ------------- |
{{ range data -}}
| {{.name}} | {{.region}} | {{.id}} |
{{ end -}}
EOS
    escalate $email
    escalate $delete_resources
    check eq(0,1)
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "email" do
   email $param_email
end

escalation "delete_resources" do
  request_approval  do
    label "Approve Resource Deletion"
    description "Approve escalation to run RightScale Cloud Workflow to destroy Azure resources in disallowed regions"
    parameter "approval_reason" do
      type "string"
      label "Reason for Approval"
      description "Explain why you are approving the action"
    end
  end
  run "delete_resources", data, $param_azure_tenant_id
end

###############################################################################
# Cloud Workflow
###############################################################################

define delete_resources($data, $param_azure_tenant_id) return $all_responses do
  call get_access_token($param_azure_tenant_id) retrieve $access_token

  $all_responses = []
  foreach $item in $data do
    sub on_error: skip do
      $response = http_request(
        verb: "delete",
        host: "management.azure.com",
        https: true,
        href: $item["id"],
        query_strings: {
          "api-version": "2018-02-01"
        },
        headers: {
          "cache-control": "no-cache",
          "content-type": "application/json",
          "authorization": "Bearer " + $access_token
        }
      )
      $all_responses << $response
    end
  end
end

define get_access_token($param_azure_tenant_id) return $access_token do

  $client_id = cred("AZURE_APPLICATION_ID")
  call url_encode(cred("AZURE_APPLICATION_KEY")) retrieve $client_secret

  $body_string = "grant_type=client_credentials&resource=https://management.core.windows.net/&client_id="+$client_id+"&client_secret="+$client_secret

  $auth_response = http_post(
    url: join(["https://login.microsoftonline.com/",$param_azure_tenant_id,"/oauth2/token?api-version=1.0"]),
    headers : {
      "cache-control":"no-cache",
      "content-type":"application/x-www-form-urlencoded"
    },
    body:$body_string
  )

  $auth_response_body = $auth_response["body"]
  $access_token = $auth_response_body["access_token"]

end

define url_encode($string) return $encoded_string do
  $encoded_string = $string
  $encoded_string = gsub($encoded_string, " ", "%20")
  $encoded_string = gsub($encoded_string, "!", "%21")
  $encoded_string = gsub($encoded_string, "#", "%23")
  $encoded_string = gsub($encoded_string, "$", "%24")
  $encoded_string = gsub($encoded_string, "&", "%26")
  $encoded_string = gsub($encoded_string, "'", "%27")
  $encoded_string = gsub($encoded_string, "(", "%28")
  $encoded_string = gsub($encoded_string, ")", "%29")
  $encoded_string = gsub($encoded_string, "*", "%2A")
  $encoded_string = gsub($encoded_string, "+", "%2B")
  $encoded_string = gsub($encoded_string, ",", "%2C")
  $encoded_string = gsub($encoded_string, "/", "%2F")
  $encoded_string = gsub($encoded_string, ":", "%3A")
  $encoded_string = gsub($encoded_string, ";", "%3B")
  $encoded_string = gsub($encoded_string, "=", "%3D")
  $encoded_string = gsub($encoded_string, "?", "%3F")
  $encoded_string = gsub($encoded_string, "@", "%40")
  $encoded_string = gsub($encoded_string, "[", "%5B")
  $encoded_string = gsub($encoded_string, "]", "%5D")
end

define sys_log($subject, $detail) do
  if $$debug
    rs_cm.audit_entries.create(
      notify: "None",
      audit_entry: {
        auditee_href: @@account,
        summary: "Azure Subscription Access - "+ $subject,
        detail: $detail
      }
    )
  end
end