name "Policy Update Notification NAG"
rs_pt_ver 20180301
type "policy"
short_description "Identifies the current version of applied policy and that of respective policy in catalog and creates an incident with the date of policy updation.See the [README](https://github.com/flexera/policy_templates/tree/master/compliance/policy_update_notification/) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
severity "low"
category "Compliance"
info(
  version: "1.0",
  provider: "Flexera Cloud Management",
  service: "",
  policy_set: ""
)

#############
# Parameters
#############

parameter "param_email" do
  type "list"
  label "Email addresses of the recipients you wish to notify"
end

#################
# Authentication
#################

auth "auth_rs", type: "rightscale"

##############
# Datasources
##############

datasource "ds_get_applied_policy_templates" do
  request do
    auth $auth_rs
    verb "GET"
    host rs_governance_host
    path join(["/api/governance/orgs/",rs_org_id,"/policy_aggregates"])
    header "Api-Version", "1.0"
    header "view", "default"
  end
  result do
    collect jmes_path(response,"items[*]") do
      field "name", jmes_path(col_item, "name")
      field "applied_version", jmes_path(col_item, "info.version")
	  field "published_template_id", jmes_path(col_item, "published_template.id")
    end
  end
end

datasource "ds_get_catalog_policy_templates" do
    request do
      auth $auth_rs
      verb "GET"
      host rs_governance_host
      path join(["/api/governance/orgs/",rs_org_id,"/published_templates"])
      header "Api-Version", "1.0"
      header "view", "extended"
    end
    result do
      encoding "json"
      field "catalog_id", jmes_path(response, "items[*].id")
    end
end

datasource "ds_get_policy_versions" do
  run_script $js_get_policy_versions, $ds_get_catalog_policy_templates, $ds_get_applied_policy_templates
end

datasource "ds_get_policy_details" do
  iterate $ds_get_policy_versions
    request do
      auth $auth_rs
      verb "GET"
      host rs_governance_host
      path join(["/api/governance/orgs/",rs_org_id,"/published_templates/",val(iter_item,"templateId")])
      header "Api-Version", "1.0"
      header "view", "extended"
    end
    result do
      encoding "json"
      field "name", jmes_path(response, "name")
      field "catalog_version", jmes_path(response, "info.version")
      field "applied_version", val(iter_item,"applied_version")
      field "policy_update_date", jmes_path(response, "updated_at")
      field "short_description", jmes_path(response, "short_description")
    end
end

datasource "ds_get_update_notification" do
  run_script $js_get_update_notification, $ds_get_policy_details
end

##############
# Script
##############

script "js_get_policy_versions", type:"javascript" do
  parameters "ds_get_catalog_policy_templates", "ds_get_applied_policy_templates"
  result "content"
  code <<-EOS
  var content=[];
  var catalog_id = ds_get_catalog_policy_templates.catalog_id;
  for(var i = 0; i< ds_get_applied_policy_templates.length;i++){
    published_template_id = ds_get_applied_policy_templates[i].published_template_id;
    if(catalog_id.indexOf(published_template_id) != -1){
      content.push({templateId:published_template_id, applied_version:ds_get_applied_policy_templates[i].applied_version});
    }
  }
 EOS
end

script "js_get_update_notification", type:"javascript" do
  parameters "ds_get_policy_details"
  result "content"
  code <<-EOS
  var content=[];
  var readmeLink;
  var changelogLink;
  var descriptionLink;
  var linkString ;
  var index;
  for(var i = 0; i< ds_get_policy_details.length;i++){
    var short_description = ds_get_policy_details[i].short_description;
    if(short_description.indexOf("README")>-1){
      index = short_description.indexOf("README");
      linkString = short_description.substr(index+8);
      descriptionLink = linkString.substr(0,linkString.indexOf(")"));
	  var length = descriptionLink.length;
	  var descriptionEnd = descriptionLink.substr(length-1);
      if(descriptionEnd === "/"){
        readmeLink = descriptionLink + "README.md";
        changelogLink = descriptionLink + "CHANGELOG.md";
      }else{
        readmeLink = descriptionLink + "/README.md";
        changelogLink = descriptionLink + "/CHANGELOG.md";
      } 
    }else {
      readmeLink = "";
      changelogLink = "";
    }
    content.push({name:ds_get_policy_details[i].name, catalog_version : ds_get_policy_details[i].catalog_version, applied_version: ds_get_policy_details[i].applied_version, policy_update_date: ds_get_policy_details[i].policy_update_date, short_description:ds_get_policy_details[i].short_description, readmeLink:readmeLink, changelogLink:changelogLink});
  }
 EOS
end

##########
# Policy
##########

policy 'update_notification_policy' do
  validate $ds_get_update_notification do
    summary_template "Policy Version Update Notification"
    escalate $email
    check eq(size(data),0)
    export "result" do
      resource_level false
      field "name" do
        label "Name"
      end
      field "catalog_version" do
        label "Catalog Version"
      end
      field "applied_version" do
        label "Applied Version"
      end
      field "policy_update_date" do
        label "Policy Template Date Change"
      end
      field "short_description" do
        label "Short Description"
      end
      field "readmeLink" do
        label "Readme Link"
      end
      field "changelogLink" do
        label "Changelog Link"
      end
    end
  end
end

##############
# Escalations
##############

escalation "email" do
  automatic true
  label "Send Email"
  description "Sends incident email"
  email $param_email
end
