name "Policy Update Notification"
rs_pt_ver 20180301
type "policy"
short_description "Identifies the current version of applied policy and that of respective policy in catalog and creates an incident with the date of policy updation.See the [README](https://github.com/flexera/policy_templates/tree/master/compliance/policy_update_notification/) and [docs.rightscale.com/policies](https://docs.rightscale.com/policies/) to learn more."
long_description ""
severity "low"
category "Compliance"
info(
  version: "1.0",
  provider: "Flexera Cloud Management",
  service: "",
  policy_set: ""
)

#############
# Parameters
#############

parameter "param_email" do
  type "list"
  label "Email addresses to notify"
  description "Email addresses of the recipients you wish to notify when new incidents are created"
end

#################
# Authentication
#################

auth "auth_rs", type: "rightscale"

##############
# Datasources
##############

datasource "ds_get_catalog_policy_templates" do
  request do
    auth $auth_rs
    verb "GET"
    host rs_governance_host
    path join(["/api/governance/orgs/",rs_org_id,"/published_templates"])
    header "Api-Version", "1.0"
    header "view", "extended"
  end
  result do
    encoding "json"
    collect jmes_path(response,"items[*]") do
      field "catalog_id", jmes_path(col_item, "id")
      field "policy_name", jmes_path(col_item, "name")
      field "catalog_version", jmes_path(col_item, "info.version")
      field "policy_update_date", jmes_path(col_item, "updated_at")
      field "short_description", jmes_path(col_item, "short_description")
    end
  end
end

datasource "ds_get_project_details" do
  request do
    auth $auth_rs
    verb "GET"
    host "governance.rightscale.com"
    path join(["/grs/orgs/",rs_org_id,"/projects"])
    header "X-Api-Version", "2.0"
  end
  result do
    encoding "json"
    collect jmes_path(response,"[*]") do
      field "project_id", jmes_path(col_item, "id")
      field "project_name", jmes_path(col_item, "name")
    end
  end
end

datasource "ds_get_account_details" do
  iterate $ds_get_project_details
    request do
      auth $auth_rs
      verb "GET"
      host rs_governance_host
      path join(["/api/governance/projects/",val(iter_item, "project_id"),"/applied_policies"])
      header "Api-Version", "1.0"
      header "view", "default"
      ignore_status [401]
    end
    result do
      encoding "json"
      collect jmes_path(response,"items[*]") do
        field "published_template_id", jmes_path(col_item, "published_template.id")
        field "project_id", val(iter_item,"project_id")
        field "project_name", val(iter_item,"project_name")
        field "applied_version", jmes_path(col_item, "info.version")
    end
  end
end

datasource "ds_get_applied_policy_templates" do
  run_script $js_get_applied_policy_templates, $ds_get_account_details
end

datasource "ds_get_update_notification" do
  run_script $js_get_update_notification, $ds_get_applied_policy_templates, $ds_get_catalog_policy_templates
end

##############
# Script
##############

script "js_get_applied_policy_templates", type:"javascript" do
  parameters "ds_get_account_details"
  result "content"
  code <<-EOS
  var content=[];
  for(var i = 0; i < ds_get_account_details.length; i++){
    if(ds_get_account_details[i].published_template_id != null){
      content.push({published_template_id:ds_get_account_details[i].published_template_id, project_id:ds_get_account_details[i].project_id, project_name:ds_get_account_details[i].project_name, applied_version:ds_get_account_details[i].applied_version});
    }
  }
EOS
end

script "js_get_update_notification", type:"javascript" do
  parameters "ds_get_applied_policy_templates", "ds_get_catalog_policy_templates"
  result "content"
  code <<-EOS
  var content=[];
  var applied_temp_id;
  var catalog_temp_id;
  for(var i=0 ; i<ds_get_applied_policy_templates.length ; i++){
    applied_temp_id = ds_get_applied_policy_templates[i].published_template_id;
    for(var j=0 ; j<ds_get_catalog_policy_templates.length ; j++){
      if(applied_temp_id == ds_get_catalog_policy_templates[j].catalog_id){
        applied_version = ds_get_applied_policy_templates[i].applied_version;
        catalog_version = ds_get_catalog_policy_templates[j].catalog_version;
        if(catalog_version !== applied_version){
          var short_description = ds_get_catalog_policy_templates[i].short_description;
          if(short_description.indexOf("README")>-1){
        index = short_description.indexOf("README");
        linkString = short_description.substr(index+8);
        descriptionLink = linkString.substr(0,linkString.indexOf(")"));
        var length = descriptionLink.length;
        var descriptionEnd = descriptionLink.substr(length-1);
        if(descriptionEnd === "/"){
          readmeLink = descriptionLink + "README.md";
          changelogLink = descriptionLink + "CHANGELOG.md";
        }else{
          readmeLink = descriptionLink + "/README.md";
          changelogLink = descriptionLink + "/CHANGELOG.md";
        }
        }else{
        readmeLink = "";
        changelogLink = "";
        }
        content.push({project_id:ds_get_applied_policy_templates[i].project_id, project_name:ds_get_applied_policy_templates[i].project_name, applied_version:applied_version,catalog_version:catalog_version,policy_update_date:ds_get_catalog_policy_templates[j].policy_update_date,short_description:ds_get_catalog_policy_templates[j].short_description,name:ds_get_catalog_policy_templates[j].policy_name, readmeLink:readmeLink, changelogLink:changelogLink});
        }
      }
    }
  }
EOS
end

policy 'update_notification_policy' do
  validate $ds_get_update_notification do
    summary_template "Policy Version Update Notification"
    escalate $email
    check eq(size(data),0)
    export "result" do
      resource_level false
      field "name" do
        label "Policy Template Name"
      end
      field "catalog_version" do
        label "Catalog Version"
      end
      field "applied_version" do
        label "Applied Version"
      end
      field "project_name" do
        label "Account Name"
      end
      field "policy_update_date" do
        label "Policy Template Date Change"
      end
      field "short_description" do
        label "Short Description"
      end
      field "readmeLink" do
        label "Readme Link"
      end
      field "changelogLink" do
        label "Changelog Link"
      end
      field "project_id" do
        label "Account Id"
      end
    end
  end
end

##############
# Escalations
##############

escalation "email" do
  automatic true
  label "Send Email"
  description "Sends incident email"
  email $param_email
end
