name "GitHub.com Unpermitted Sized Repositories"
rs_pt_ver 20180301
short_description "Gets all repositories under GitHub.com Organization(s) and creates incidents for any that were created longer than a specified number of days ago, and are smaller than a specified size.  See the [README](https://github.com/flexera/policy_templates/tree/master/compliance/github/repository_size) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "low"
category "Compliance"
info(
  version: "2.3",
  provider: "GitHub",
  service: "",
  policy_set: ""
)

parameter "param_email" do
  label "Email addresses of the recipients you wish to notify"
  type "list"
end

parameter "param_orgs" do
  type "list"
  label "Organizations on GitHub.com to scan"
end

parameter "param_repo_age" do
  type "string"
  label "Required minimum age of repository in days"
  default "7"
end

parameter "param_repo_size" do
  type "string"
  label "Required minimum size of repository in bytes"
  default "1"
end

credentials "auth_github" do
  schemes "api_key"
  label "GitHub"
  description "Select the Github Credential from the list."
  tags "provider=github"
end

pagination "github_pagination" do
  get_page_marker do
    header "Link"
  end
  set_page_marker do
    uri true
  end
end

datasource "ds_orgs_array" do
  run_script $js_orgs_array, $param_orgs
end

script "js_orgs_array", type: "javascript" do
  parameters "param_orgs"
  result "orgs_array"
  code <<-EOS
var orgs_array = param_orgs;
EOS
end

datasource "org_repos" do
  iterate $ds_orgs_array
  request do
    auth $auth_github
    pagination $github_pagination
    host "api.github.com"
    path join(["/orgs/",iter_item,"/repos"])
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "id", jmes_path(col_item, "id")
      field "name", jmes_path(col_item, "name")
      field "repo_name", jmes_path(col_item, "name")
      field "repo_org", jmes_path(col_item, "owner.login")
      field "repo_size", jmes_path(col_item, "size")
      field "repo_created_at", jmes_path(col_item, "created_at")
      field "repo_updated_at", jmes_path(col_item, "updated_at")
      field "repo_pushed_at", jmes_path(col_item, "pushed_at")
      end
  end
end

datasource "invalid_repos" do
    run_script $js_invalid_repos, $org_repos, $param_repo_size, $param_repo_age
end

script "js_invalid_repos", type: "javascript" do
    parameters "org_repos","param_repo_size","param_repo_age"
    result "invalid_org_repos"
    code <<-EOS
var invalid_org_repos = [];
for (var index = 0; index < org_repos.length; index++) {
  var repo = org_repos[index];
  repo_age = (new Date().getTime()) - (new Date(repo.repo_created_at).getTime());
  param_repo_age_ms =  (param_repo_age * 60*60*24 * 1000);
  // exclude repos that are younger than number of days specified in param_repo_age
  if (repo_age >= param_repo_age_ms && repo.repo_size <= param_repo_size) {
    repo["fullRepositoryName"] = "["+repo.repo_name+"](https://github.com/"+repo.repo_name+")"
    repo["fullAuditLogLink"] = "[Audit Log](https://github.com/organizations/"+repo.repo_org+"/settings/audit-log?utf8=%E2%9C%93&q=repo%3A"+repo.repo_org+"%2F"+repo.repo_name+")"
    invalid_org_repos.push(repo);
  }
}
EOS
end

policy "invalid_repos" do
  validate $invalid_repos do
    summary_template "GitHub.com Empty Repository Report"
    check eq(size(data), 0)
    escalate $report_repositories
    #### Policy Organization(s): {{  parameters.param_orgs }}
    #### Policy Minimum Repository Age: {{  parameters.param_repo_age }} day(s)
    #### Policy Minimum Repository Size: {{  parameters.param_repo_size }} byte(s)
    export do
      resource_level true
      field "repo_org" do
        label "Organization"
      end
      field "fullRepositoryName" do
        label "Repository"
      end
      field "repo_size" do
        label "Repository Size In byte(s)"
      end
      field "repo_created_at" do
        label "Repository Created At"
      end
      field "fullAuditLogLink" do
        label "Audit Log Link"
      end
      field "id" do
        label "Id"
      end
    end
  end
end

escalation "report_repositories" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
