name "Orgs and Clouds Vendor Accounts"
rs_pt_ver 20180301
type "policy"
short_description "**Deprecated: This policy is no longer being updated. Please see [README](https://github.com/flexera-public/policy_templates/tree/master/compliance/flexera/msp/orgs_and_cloud_accounts_report/) for more details.**  This policy generates a list of cross organization Cloud Vendor Accounts connected to Flexera CCO based on the bill connection settings for Azure and Google, as well as full list of AWS accounts under the payer account connected for each Flexera Organization. See [README](https://github.com/flexera-public/policy_templates/tree/master/compliance/flexera/msp/orgs_and_cloud_accounts_report) for more details"
long_description ""
doc_link "https://github.com/flexera-public/policy_templates/tree/master/compliance/flexera/msp/orgs_and_cloud_accounts_report"
category "Compliance"
severity "low"
default_frequency "weekly"
info(
  version: "2.0.4",
  provider: "Flexera",
  service: "Cloud Cost Optimization",
  policy_set: "Managed Service Provider",
  deprecated: "true",
  publish: "false"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email List"
  description "Email addresses of the recipients you wish to notify"
  default []
end

parameter "param_exclude_organizations" do
  type "list"
  category "Policy Settings"
  label "Excluded Organizations"
  description "Names of organizations to exclude. NOTE: use only either 'Excluded Organizations' or 'Exclucded organizations IDs', not both"
  default []
end

parameter "param_exclude_organizations_ids" do
  type "list"
  category "Policy Settings"
  label "Excluded Organizations IDs"
  description "IDs of organizations to exclude. NOTE: use only either 'Excluded Organizations' or 'Exclucded organizations IDs', not both"
  default []
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_flexera" do
  schemes "oauth2"
  label "flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Datasources & Scripts
###############################################################################

datasource "ds_session" do
  request do
    auth $auth_flexera
    host rs_cm_host
    path "/api/sessions"
    query "view", "whoami"
    header "X-Api-Version", "1.5"
  end
  result do
    field "userid", join(["/grs/users/", last(split(first(jmes_path(response, "links[?rel == 'user'].href")), '/'))])
  end
end

datasource "ds_current_user_organizations" do
  request do
    run_script $js_current_user_organizations, $ds_session
  end
  result do
    collect jmes_path(response, "orgs") do
      field "href", jmes_path(col_item, "href")
      field "org_id", last(split(jmes_path(col_item, "href"), "/"))
      field "name", jmes_path(col_item, "name")
      field "cluster", jmes_path(col_item, "starts_with(legacy.account_url, 'https://us-3') && '3' || starts_with(legacy.account_url, 'https://us-4') && '4'")
    end
  end
end

script "js_current_user_organizations", type: "javascript" do
  parameters "ds_session"
  result "request"
  code <<-EOS
  var request = {
    "auth": "auth_flexera",
    "verb": "GET",
    "host": "governance.rightscale.com",
    "path": ds_session["userid"],
    "headers": {"X-Api-Version": "2.0" },
    "query_params":{"view":"extended"}
  }
EOS
end

datasource "ds_filtered_user_organizations" do
  run_script $js_filtered_user_organizations, $ds_current_user_organizations, $param_exclude_organizations, $param_exclude_organizations_ids
end

script "js_filtered_user_organizations", type: "javascript" do
  parameters "ds_current_user_organizations", "param_exclude_organizations", "param_exclude_organizations_ids"
  result "results"
  code <<-EOS
  var results = _.reject(ds_current_user_organizations, function(org){
    return _.contains(param_exclude_organizations, org["name"])
  })

  if ( param_exclude_organizations_ids.length > 0) {
    var results = _.reject(ds_current_user_organizations, function(org){
      return _.contains(param_exclude_organizations_ids, org["org_id"])
    })
  }
EOS
end

datasource "ds_bill_connects" do
  iterate $ds_filtered_user_organizations
  request do
    auth $auth_flexera
    host "onboarding.rightscale.com"
    path join(["/api/onboarding/orgs/", val(iter_item, "org_id"), "/bill_connects"])
    header "Api-Version", "1.0"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "id", jmes_path(col_item, "id")
      field "cloud_vendor_id", jmes_path(col_item, "cloud_vendor_id")
      field "org_id", val(iter_item, "org_id")
      field "aws_cloud_vendor_account_name", ""
    end
  end
end

datasource "ds_bill_connects_csp" do
  iterate $ds_filtered_user_organizations
  request do
    auth $auth_flexera
    host rs_optima_host
    path join(["/analytics/orgs/", val(iter_item, "org_id"), "/azure_csp_partners"])
    header "Api-Version", "1.0"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "id", jmes_path(col_item, "id")
      field "cloud_vendor_id", "azure_csp_partners"
      field "org_id", val(iter_item, "org_id")
      field "aws_cloud_vendor_account_name", ""
    end
  end
end

datasource "ds_aws_cloud_vendor_accounts" do
  iterate $ds_filtered_user_organizations
  request do
    auth $auth_flexera
    host rs_optima_host
    path join(["/bill-analysis/orgs/", val(iter_item, "org_id"), "/cloud_vendor_accounts"])
    query "cloud_vendor", "aws"
    header "Api-Version", "0.1"
    header "User-Agent", "RS Policies"
  end
  result do
    encoding "json"
    collect jmes_path(response, "[*]") do
      field "id", join(["aws-", jmes_path(col_item, "id")])
      field "cloud_vendor_id", "aws"
      field "org_id", val(iter_item, "org_id")
      field "aws_cloud_vendor_account_name", jmes_path(col_item, "name")
    end
  end
end

datasource "ds_bill_connects_without_aws_payer" do
  run_script $js_bill_connects_without_aws_payer, $ds_bill_connects
end

script "js_bill_connects_without_aws_payer", type: "javascript" do
  parameters "ds_bill_connects"
  result "result"
  code <<-EOS
  var cloud_vendor_to_exclude = ["aws"]
  var result = _.reject(ds_bill_connects, function(account){
    return _.contains(cloud_vendor_to_exclude, account["cloud_vendor_id"])
  })
EOS
end

datasource "ds_combined_cloud_accounts" do
  run_script $js_combined_cloud_accounts, $ds_bill_connects_without_aws_payer, $ds_bill_connects_csp, $ds_aws_cloud_vendor_accounts
end

script "js_combined_cloud_accounts", type: "javascript" do
  parameters "ds_bill_connects_csp", "ds_bill_connects_without_aws_payer", "ds_aws_cloud_vendor_accounts"
  result "result"
  code <<-EOS
  var result = ""
  if ( ds_bill_connects_csp.length > 0 ) {
    result = ds_bill_connects_csp.concat(ds_bill_connects_without_aws_payer)
  }
  else {
    result = ds_bill_connects_without_aws_payer
  }
  result = result.concat(ds_aws_cloud_vendor_accounts)
EOS
end

datasource "ds_normalized_cloud_vendor_ids" do
  run_script $js_normalized_cloud_vendor_ids, $ds_combined_cloud_accounts
end

script "js_normalized_cloud_vendor_ids", type: "javascript" do
  parameters "ds_combined_cloud_accounts"
  result "result"
  code <<-EOS
  function dedup(arr) {
    var hashTable = {};
    return arr.filter(function (el) {
      var key = JSON.stringify(el);
      var match = Boolean(hashTable[key]);
      return (match ? false : hashTable[key] = true);
    });
  }
  for (var i = 0; i < ds_combined_cloud_accounts.length; i++) {
    ds_combined_cloud_accounts[i].id = ds_combined_cloud_accounts[i].id.replace(/^(aws|azure-ea|azure-mca-enterprise|google)-/g, "")
  }
  var result = dedup(ds_combined_cloud_accounts);
  result = _.sortBy(result, 'org_id');
EOS
end

###############################################################################
# Policy
###############################################################################

policy "pol_scheduled_report" do
  validate_each $ds_normalized_cloud_vendor_ids do
    summary_template "{{ rs_project_name }} (Account ID: {{ rs_project_id }}): {{ len data }} Cloud Accounts Found"
    detail_template <<-EOS
      {{ len data }} Cloud Accounts have been generated from: {{ rs_project_name }} (ID: {{ rs_project_id }}) \n
    EOS
    check eq(0, 1)
    escalate $esc_email
    export do
      field "org_id" do
        label "Flexera Org ID"
      end
      field "cloud_vendor_id" do
        label "Cloud Vendor"
      end
      field "id" do
        label "Cloud Account ID"
      end
      field "aws_cloud_vendor_account_name" do
        label "AWS Account Name"
      end
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_email" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
