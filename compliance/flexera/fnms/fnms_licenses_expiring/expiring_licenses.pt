name "ITAM Expiring Licenses"
rs_pt_ver 20180301
type "policy"
short_description "Looks up Active Flexnet Manager Licenses Expiring within set Time Period and sends the result as an email.  See the [README](https://github.com/flexera-public/policy_templates/tree/master/compliance/flexera/fnms/fnms_licenses_expiring) and [docs.flexera.com/flexera/EN/Automation](https://docs.flexera.com/flexera/EN/Automation/AutomationGS.htm) to learn more."
long_description ""
severity "medium"
category "Compliance"
default_frequency "weekly"
info(
  version: "2.4.3",
  provider: "Flexera",
  service: "IT Asset Management",
  policy_set: "IT Asset Management",
  hide_skip_approvals: "true"
)

###############################################################################
# Parameters
###############################################################################

parameter "param_expiring" do
  type "number"
  category "Policy Settings"
  label "Time Period of Expiration"
  description "Number of days out to search for license expiration"
  default 90
end

parameter "param_email" do
  type "list"
  category "Policy Settings"
  label "Email addresses of the recipients you wish to notify"
  description "A list of email addresse(s) to notify"
  default []
end

###############################################################################
# Authentication
###############################################################################

credentials "auth_flexera" do
  schemes "oauth2"
  label "flexera"
  description "Select Flexera One OAuth2 credentials"
  tags "provider=flexera"
end

###############################################################################
# Pagination
###############################################################################

pagination "pagination_itam" do
  get_page_marker do
    body_path jq(response, "if .total == 0 then null else .offset + 10000 end")
  end
  set_page_marker do
    query "offset"
  end
end

###############################################################################
# Datasources & Scripts
###############################################################################

datasource "ds_licenses" do
  request do
    auth $auth_flexera
    pagination $pagination_itam
    host join(["api.", get(1, split(f1_app_host, "app."))])
    path join(["/fnms/v1/orgs/", rs_org_id, "/license-attributes"])
    query "status", "Active"
    query "limit", "10000"
    header "Api-Version", "0.1"
    header "User-Agent", "RS Policies"
  end
end

datasource "ds_check_date" do
  run_script $js_check_date, $ds_licenses, $param_expiring
end

script "js_check_date", type: "javascript" do
  parameters "ds_licenses", "param_expiring"
  result "result"
  code <<-EOF
  result = []

  _.each(ds_licenses[0].values, function (license) {
    var startDate = new Date(license.expiryDate); // Inventory Date
    var endDate = new Date();
    var timeDifference =  startDate.getTime() - endDate.getTime();
    var daysDifference = parseInt(timeDifference / (1000 * 3600 * 24));
    if ((daysDifference <= param_expiring && license.expiryDate.length != '') && (license.licenseStatus != 'Retired' && license.licenseStatus != '[Retired]')) {
      license.expiring = 1;
      result.push(license);
    }
  })
EOF
end

###############################################################################
# Policy
###############################################################################

policy "pol_expiring_license" do
  validate_each $ds_check_date do
    summary_template 'IT Asset - Expiring Licenses'
    check eq(to_n(val(item, "expiring")), 0)
    escalate $esc_send_report
    export do
      field "licenseId"
      field "publisher"
      field "licenseName"
      field "version"
      field "edition"
      field "licenseStatus"
      field "licenseDuration"
      field "licenseType"
      field "expiryDate"
    end
  end
end

###############################################################################
# Escalations
###############################################################################

escalation "esc_send_report" do
  automatic true
  label "Send Email"
  description "Send incident email"
  email $param_email
end
